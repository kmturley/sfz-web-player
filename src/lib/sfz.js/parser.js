/*
 * Generated by PEG.js 0.10.0.
 *
 * http://pegjs.org/
 */

"use strict";

function peg$subclass(child, parent) {
  function ctor() { this.constructor = child; }
  ctor.prototype = parent.prototype;
  child.prototype = new ctor();
}

function peg$SyntaxError(message, expected, found, location) {
  this.message  = message;
  this.expected = expected;
  this.found    = found;
  this.location = location;
  this.name     = "SyntaxError";

  if (typeof Error.captureStackTrace === "function") {
    Error.captureStackTrace(this, peg$SyntaxError);
  }
}

peg$subclass(peg$SyntaxError, Error);

peg$SyntaxError.buildMessage = function(expected, found) {
  var DESCRIBE_EXPECTATION_FNS = {
        literal: function(expectation) {
          return "\"" + literalEscape(expectation.text) + "\"";
        },

        "class": function(expectation) {
          var escapedParts = "",
              i;

          for (i = 0; i < expectation.parts.length; i++) {
            escapedParts += expectation.parts[i] instanceof Array
              ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
              : classEscape(expectation.parts[i]);
          }

          return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
        },

        any: function(expectation) {
          return "any character";
        },

        end: function(expectation) {
          return "end of input";
        },

        other: function(expectation) {
          return expectation.description;
        }
      };

  function hex(ch) {
    return ch.charCodeAt(0).toString(16).toUpperCase();
  }

  function literalEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/"/g,  '\\"')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function classEscape(s) {
    return s
      .replace(/\\/g, '\\\\')
      .replace(/\]/g, '\\]')
      .replace(/\^/g, '\\^')
      .replace(/-/g,  '\\-')
      .replace(/\0/g, '\\0')
      .replace(/\t/g, '\\t')
      .replace(/\n/g, '\\n')
      .replace(/\r/g, '\\r')
      .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
  }

  function describeExpectation(expectation) {
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
  }

  function describeExpected(expected) {
    var descriptions = new Array(expected.length),
        i, j;

    for (i = 0; i < expected.length; i++) {
      descriptions[i] = describeExpectation(expected[i]);
    }

    descriptions.sort();

    if (descriptions.length > 0) {
      for (i = 1, j = 1; i < descriptions.length; i++) {
        if (descriptions[i - 1] !== descriptions[i]) {
          descriptions[j] = descriptions[i];
          j++;
        }
      }
      descriptions.length = j;
    }

    switch (descriptions.length) {
      case 1:
        return descriptions[0];

      case 2:
        return descriptions[0] + " or " + descriptions[1];

      default:
        return descriptions.slice(0, -1).join(", ")
          + ", or "
          + descriptions[descriptions.length - 1];
    }
  }

  function describeFound(found) {
    return found ? "\"" + literalEscape(found) + "\"" : "end of input";
  }

  return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
};

function peg$parse(input, options) {
  options = options !== void 0 ? options : {};

  var peg$FAILED = {},

      peg$startRuleFunctions = { start: peg$parsestart },
      peg$startRuleFunction  = peg$parsestart,

      peg$c0 = function(instrument) { return instrument; },
      peg$c1 = function(elements) {

            function extend(target, source){
              target = target || {};
              for (var prop in source) {
                if (typeof source[prop] === 'object') {
                  target[prop] = extend(target[prop], source[prop]);
                } else {
                  target[prop] = source[prop];
                }
              }
              return target;
            }

            function defaults(target, source){
              target = target || {};
              for (var prop in source) {
                if (target[prop]) continue;
                if (typeof source[prop] === 'object') {
                  target[prop] = defaults(target[prop], source[prop]);
                } else {
                  target[prop] = source[prop];
                }
              }
              return target;
            }

            elements = elements !== null ? elements : [];
            var global = null;
            var masters = [];
            var controls = [];
            var groups = [];
            var regions = [];
            var curves = [];
            var lastMaster = null
              , lastControl = null
              , lastGroup = null
              , lastNode = null
            for (var i = 0; i < elements.length; i++) {
              if (elements[i] == '<global>') {
                lastNode = global = {}
              } else if (elements[i] == '<master>') {
                lastNode = lastMaster = { masterId: "master" + masters.length }
              } else if (elements[i] == '<group>') {
                lastNode = lastGroup = {}
              } else if (elements[i] == '<control>') {
                lastNode = lastControl = {}
              } else if (elements[i] == "<region>") {
                lastNode = {}
                lastNode.master = lastMaster
                lastNode.groupNode = lastGroup
                lastNode.control = lastControl
                lastNode.regionId = "r" + regions.length
                regions.push(lastNode)
              } else if (elements[i] == "<curve>") {
                lastNode = {}
                curves.push(lastNode)
              } else {
                var param = elements[i]
                  , name = param[0]
                  , value = param[1]

                if (lastNode) {
                  extend(lastNode, elements[i])
                }
              }
            }

            for (var i = 0; i < curves.length; i++) {
              var curve = curves[i]
              var newCurve = {}
              for (var key in curve) {
                if (curve.hasOwnProperty(key)) {
                  var v = key.replace("v", "")
                  newCurve[parseInt(v, 10)] = curve[key]
                }
              }
              curves[i] = newCurve
            }

            var isEmpty = function(obj) {
              if (obj == null) return true;
              for (var key in obj) if (obj.hasOwnProperty(key)) return false;
              return true;
            };

            var regionz = []
            for (var i = 0; i < regions.length; i++) {
              var region = regions[i]
                , regionCopy = {}

              extend(regionCopy, region)
              delete regionCopy.master
              delete regionCopy.groupNode
              delete regionCopy.control
              delete regionCopy.regionId

              if (isEmpty(regionCopy)) {
                continue;
              }

              if (global) defaults(region, global)
              if (region.control) defaults(region, region.control)
              if (region.groupNode) defaults(region, region.groupNode)

              if (region.default_path && region.sample) {
                region.sample = region.default_path + region.sample
                delete region.default_path
              }

              var noteOffset = 0
              if (region.octave_offset) {
                noteOffset += region.octave_offset * 12
                delete region.octave_offset
              }

              if (region.note_offset) {
                noteOffset += region.note_offset
                delete region.note_offset
              }

              if (noteOffset) {
                if (region.lokey) region.lokey += noteOffset
                if (region.hikey) region.hikey += noteOffset
                if (region.pitch_keycenter) region.pitch_keycenter += noteOffset
                if (region.sw_lokey) region.sw_lokey += noteOffset
                if (region.sw_hikey) region.sw_hikey += noteOffset
                if (region.sw_last) region.sw_last += noteOffset
                if (region.sw_down) region.sw_down += noteOffset
                if (region.sw_up) region.sw_up += noteOffset
                if (region.sw_previous) region.sw_previous += noteOffset
              }

              if (region.master) {
                defaults(region, region.master)
                if (region.lokey && region.master.lokey) {
                  if (region.lokey < region.master.lokey) {
                    region.lokey = region.master.lokey
                  }
                }

                if (region.hikey && region.master.hikey) {
                  if (region.hikey > region.master.hikey) {
                    region.hikey = region.master.hikey
                  }
                }

                if (region.lovel && region.master.lovel) {
                  if (region.lovel < region.master.lovel) {
                    region.lovel = region.master.lovel
                  }
                }

                if (region.hivel && region.master.hivel) {
                  if (region.hivel > region.master.hivel) {
                    region.hivel = region.master.hivel
                  }
                }
              }
              delete region.master
              delete region.groupNode
              delete region.control
              if (region.masterId) delete region.masterId
              regionz.push(region)
            }

            return {
              type: "Instrument",
              masters: masters,
              regions: regionz,
              curves: curves
            };
          },
      peg$c2 = function(head, tail) {
            var result = [head];
            for (var i = 0; i < tail.length; i++) {
              result.push(tail[i][1]);
            }
            return result;
          },
      peg$c3 = peg$anyExpectation(),
      peg$c4 = peg$otherExpectation("header"),
      peg$c5 = "<global>",
      peg$c6 = peg$literalExpectation("<global>", false),
      peg$c7 = "<master>",
      peg$c8 = peg$literalExpectation("<master>", false),
      peg$c9 = "<region>",
      peg$c10 = peg$literalExpectation("<region>", false),
      peg$c11 = "<group>",
      peg$c12 = peg$literalExpectation("<group>", false),
      peg$c13 = "<curve>",
      peg$c14 = peg$literalExpectation("<curve>", false),
      peg$c15 = peg$otherExpectation("opcode directive"),
      peg$c16 = "sample=",
      peg$c17 = peg$literalExpectation("sample=", false),
      peg$c18 = function(value) { return { sample: value } },
      peg$c19 = "key=",
      peg$c20 = peg$literalExpectation("key=", false),
      peg$c21 = function(value) {
          return { lokey: value, hikey: value, pitch_keycenter: value }
        },
      peg$c22 = "sw_vel=",
      peg$c23 = peg$literalExpectation("sw_vel=", false),
      peg$c24 = "current",
      peg$c25 = peg$literalExpectation("current", false),
      peg$c26 = "previous",
      peg$c27 = peg$literalExpectation("previous", false),
      peg$c28 = function(value) { return { sw_vel: value } },
      peg$c29 = "sw_trigger=",
      peg$c30 = peg$literalExpectation("sw_trigger=", false),
      peg$c31 = "attack",
      peg$c32 = peg$literalExpectation("attack", false),
      peg$c33 = "release",
      peg$c34 = peg$literalExpectation("release", false),
      peg$c35 = "first",
      peg$c36 = peg$literalExpectation("first", false),
      peg$c37 = "legato",
      peg$c38 = peg$literalExpectation("legato", false),
      peg$c39 = function(value) { return { sw_trigger: value } },
      peg$c40 = "off_mode=",
      peg$c41 = peg$literalExpectation("off_mode=", false),
      peg$c42 = "fast",
      peg$c43 = peg$literalExpectation("fast", false),
      peg$c44 = "normal",
      peg$c45 = peg$literalExpectation("normal", false),
      peg$c46 = function(value) { return { off_mode: value } },
      peg$c47 = "fil_type=",
      peg$c48 = peg$literalExpectation("fil_type=", false),
      peg$c49 = "lpf_1p",
      peg$c50 = peg$literalExpectation("lpf_1p", false),
      peg$c51 = "hpf_1p",
      peg$c52 = peg$literalExpectation("hpf_1p", false),
      peg$c53 = "lpf_2p",
      peg$c54 = peg$literalExpectation("lpf_2p", false),
      peg$c55 = "hpf_2p",
      peg$c56 = peg$literalExpectation("hpf_2p", false),
      peg$c57 = "bpf_2p",
      peg$c58 = peg$literalExpectation("bpf_2p", false),
      peg$c59 = "brf_2p",
      peg$c60 = peg$literalExpectation("brf_2p", false),
      peg$c61 = function(value) { return { fil_type: value } },
      peg$c62 = "=",
      peg$c63 = peg$literalExpectation("=", false),
      peg$c64 = function(name, value) {
          var param = {}
          param[name] = value
          return param
        },
      peg$c65 = "gain",
      peg$c66 = peg$literalExpectation("gain", false),
      peg$c67 = "power",
      peg$c68 = peg$literalExpectation("power", false),
      peg$c69 = "xf_keycurve",
      peg$c70 = peg$literalExpectation("xf_keycurve", false),
      peg$c71 = "xf_velcurve",
      peg$c72 = peg$literalExpectation("xf_velcurve", false),
      peg$c73 = "xf_cccurve",
      peg$c74 = peg$literalExpectation("xf_cccurve", false),
      peg$c75 = peg$otherExpectation("midi note opcode"),
      peg$c76 = "lokey",
      peg$c77 = peg$literalExpectation("lokey", false),
      peg$c78 = "hikey",
      peg$c79 = peg$literalExpectation("hikey", false),
      peg$c80 = "pitch_keycenter",
      peg$c81 = peg$literalExpectation("pitch_keycenter", false),
      peg$c82 = "sw_lokey",
      peg$c83 = peg$literalExpectation("sw_lokey", false),
      peg$c84 = "sw_hikey",
      peg$c85 = peg$literalExpectation("sw_hikey", false),
      peg$c86 = "sw_last",
      peg$c87 = peg$literalExpectation("sw_last", false),
      peg$c88 = "sw_down",
      peg$c89 = peg$literalExpectation("sw_down", false),
      peg$c90 = "sw_up",
      peg$c91 = peg$literalExpectation("sw_up", false),
      peg$c92 = "sw_previous",
      peg$c93 = peg$literalExpectation("sw_previous", false),
      peg$c94 = "octave_offset",
      peg$c95 = peg$literalExpectation("octave_offset", false),
      peg$c96 = "note_offset",
      peg$c97 = peg$literalExpectation("note_offset", false),
      peg$c98 = peg$otherExpectation("float opcode"),
      peg$c99 = "fillfo_delay",
      peg$c100 = peg$literalExpectation("fillfo_delay", false),
      peg$c101 = "fillfo_fade",
      peg$c102 = peg$literalExpectation("fillfo_fade", false),
      peg$c103 = "fillfo_freq",
      peg$c104 = peg$literalExpectation("fillfo_freq", false),
      peg$c105 = "fillfo_freqcc1",
      peg$c106 = peg$literalExpectation("fillfo_freqcc1", false),
      peg$c107 = "fillfo_freqcc2",
      peg$c108 = peg$literalExpectation("fillfo_freqcc2", false),
      peg$c109 = "lorand",
      peg$c110 = peg$literalExpectation("lorand", false),
      peg$c111 = "hirand",
      peg$c112 = peg$literalExpectation("hirand", false),
      peg$c113 = "lotimer",
      peg$c114 = peg$literalExpectation("lotimer", false),
      peg$c115 = "hitimer",
      peg$c116 = peg$literalExpectation("hitimer", false),
      peg$c117 = "lobpm",
      peg$c118 = peg$literalExpectation("lobpm", false),
      peg$c119 = "hibpm",
      peg$c120 = peg$literalExpectation("hibpm", false),
      peg$c121 = "delay_random",
      peg$c122 = peg$literalExpectation("delay_random", false),
      peg$c123 = "delay_cc1",
      peg$c124 = peg$literalExpectation("delay_cc1", false),
      peg$c125 = "delay_cc2",
      peg$c126 = peg$literalExpectation("delay_cc2", false),
      peg$c127 = "delay",
      peg$c128 = peg$literalExpectation("delay", false),
      peg$c129 = "sync_beats",
      peg$c130 = peg$literalExpectation("sync_beats", false),
      peg$c131 = "sync_offset",
      peg$c132 = peg$literalExpectation("sync_offset", false),
      peg$c133 = "pitcheg_delay",
      peg$c134 = peg$literalExpectation("pitcheg_delay", false),
      peg$c135 = "pitcheg_start",
      peg$c136 = peg$literalExpectation("pitcheg_start", false),
      peg$c137 = "pitcheg_attack",
      peg$c138 = peg$literalExpectation("pitcheg_attack", false),
      peg$c139 = "pitcheg_hold",
      peg$c140 = peg$literalExpectation("pitcheg_hold", false),
      peg$c141 = "pitcheg_decay",
      peg$c142 = peg$literalExpectation("pitcheg_decay", false),
      peg$c143 = "pitcheg_sustain",
      peg$c144 = peg$literalExpectation("pitcheg_sustain", false),
      peg$c145 = "pitcheg_release",
      peg$c146 = peg$literalExpectation("pitcheg_release", false),
      peg$c147 = "pitcheg_vel2delay",
      peg$c148 = peg$literalExpectation("pitcheg_vel2delay", false),
      peg$c149 = "pitcheg_vel2attack",
      peg$c150 = peg$literalExpectation("pitcheg_vel2attack", false),
      peg$c151 = "pitcheg_vel2hold",
      peg$c152 = peg$literalExpectation("pitcheg_vel2hold", false),
      peg$c153 = "pitcheg_vel2decay",
      peg$c154 = peg$literalExpectation("pitcheg_vel2decay", false),
      peg$c155 = "pitcheg_vel2sustain",
      peg$c156 = peg$literalExpectation("pitcheg_vel2sustain", false),
      peg$c157 = "pitchlfo_delay",
      peg$c158 = peg$literalExpectation("pitchlfo_delay", false),
      peg$c159 = "pitchlfo_fade",
      peg$c160 = peg$literalExpectation("pitchlfo_fade", false),
      peg$c161 = "pitchlfo_freqcc1",
      peg$c162 = peg$literalExpectation("pitchlfo_freqcc1", false),
      peg$c163 = "pitchlfo_freqcc60",
      peg$c164 = peg$literalExpectation("pitchlfo_freqcc60", false),
      peg$c165 = "pitchlfo_freqchanaft",
      peg$c166 = peg$literalExpectation("pitchlfo_freqchanaft", false),
      peg$c167 = "pitchlfo_freqpolyaft",
      peg$c168 = peg$literalExpectation("pitchlfo_freqpolyaft", false),
      peg$c169 = "pitchlfo_freq",
      peg$c170 = peg$literalExpectation("pitchlfo_freq", false),
      peg$c171 = "cutoff",
      peg$c172 = peg$literalExpectation("cutoff", false),
      peg$c173 = "resonance",
      peg$c174 = peg$literalExpectation("resonance", false),
      peg$c175 = "fileg_delay",
      peg$c176 = peg$literalExpectation("fileg_delay", false),
      peg$c177 = "fileg_start",
      peg$c178 = peg$literalExpectation("fileg_start", false),
      peg$c179 = "fileg_attack",
      peg$c180 = peg$literalExpectation("fileg_attack", false),
      peg$c181 = "fileg_hold",
      peg$c182 = peg$literalExpectation("fileg_hold", false),
      peg$c183 = "fileg_decay",
      peg$c184 = peg$literalExpectation("fileg_decay", false),
      peg$c185 = "fileg_sustain",
      peg$c186 = peg$literalExpectation("fileg_sustain", false),
      peg$c187 = "fileg_release",
      peg$c188 = peg$literalExpectation("fileg_release", false),
      peg$c189 = "fileg_vel2delay",
      peg$c190 = peg$literalExpectation("fileg_vel2delay", false),
      peg$c191 = "fileg_vel2attack",
      peg$c192 = peg$literalExpectation("fileg_vel2attack", false),
      peg$c193 = "fileg_vel2hold",
      peg$c194 = peg$literalExpectation("fileg_vel2hold", false),
      peg$c195 = "fileg_vel2decay",
      peg$c196 = peg$literalExpectation("fileg_vel2decay", false),
      peg$c197 = "fileg_vel2sustain",
      peg$c198 = peg$literalExpectation("fileg_vel2sustain", false),
      peg$c199 = "fileg_vel2release",
      peg$c200 = peg$literalExpectation("fileg_vel2release", false),
      peg$c201 = "volume",
      peg$c202 = peg$literalExpectation("volume", false),
      peg$c203 = "pan",
      peg$c204 = peg$literalExpectation("pan", false),
      peg$c205 = "width",
      peg$c206 = peg$literalExpectation("width", false),
      peg$c207 = "position",
      peg$c208 = peg$literalExpectation("position", false),
      peg$c209 = "amp_keytrack",
      peg$c210 = peg$literalExpectation("amp_keytrack", false),
      peg$c211 = "amp_veltrack",
      peg$c212 = peg$literalExpectation("amp_veltrack", false),
      peg$c213 = "amp_velcurve_1",
      peg$c214 = peg$literalExpectation("amp_velcurve_1", false),
      peg$c215 = "amp_velcurve_127",
      peg$c216 = peg$literalExpectation("amp_velcurve_127", false),
      peg$c217 = "amp_random",
      peg$c218 = peg$literalExpectation("amp_random", false),
      peg$c219 = "rt_decay",
      peg$c220 = peg$literalExpectation("rt_decay", false),
      peg$c221 = "ampeg_delay",
      peg$c222 = peg$literalExpectation("ampeg_delay", false),
      peg$c223 = "ampeg_start",
      peg$c224 = peg$literalExpectation("ampeg_start", false),
      peg$c225 = "ampeg_attack",
      peg$c226 = peg$literalExpectation("ampeg_attack", false),
      peg$c227 = "ampeg_hold",
      peg$c228 = peg$literalExpectation("ampeg_hold", false),
      peg$c229 = "ampeg_decay",
      peg$c230 = peg$literalExpectation("ampeg_decay", false),
      peg$c231 = "ampeg_sustain",
      peg$c232 = peg$literalExpectation("ampeg_sustain", false),
      peg$c233 = "ampeg_release",
      peg$c234 = peg$literalExpectation("ampeg_release", false),
      peg$c235 = "ampeg_vel2delay",
      peg$c236 = peg$literalExpectation("ampeg_vel2delay", false),
      peg$c237 = "ampeg_vel2attack",
      peg$c238 = peg$literalExpectation("ampeg_vel2attack", false),
      peg$c239 = "ampeg_vel2hold",
      peg$c240 = peg$literalExpectation("ampeg_vel2hold", false),
      peg$c241 = "ampeg_vel2decay",
      peg$c242 = peg$literalExpectation("ampeg_vel2decay", false),
      peg$c243 = "ampeg_vel2sustain",
      peg$c244 = peg$literalExpectation("ampeg_vel2sustain", false),
      peg$c245 = "ampeg_vel2release",
      peg$c246 = peg$literalExpectation("ampeg_vel2release", false),
      peg$c247 = "amplfo_delay",
      peg$c248 = peg$literalExpectation("amplfo_delay", false),
      peg$c249 = "amplfo_fade",
      peg$c250 = peg$literalExpectation("amplfo_fade", false),
      peg$c251 = "amplfo_depthchanaft",
      peg$c252 = peg$literalExpectation("amplfo_depthchanaft", false),
      peg$c253 = "amplfo_depthpolyaft",
      peg$c254 = peg$literalExpectation("amplfo_depthpolyaft", false),
      peg$c255 = "amplfo_depth",
      peg$c256 = peg$literalExpectation("amplfo_depth", false),
      peg$c257 = "amplfo_freqchanaft",
      peg$c258 = peg$literalExpectation("amplfo_freqchanaft", false),
      peg$c259 = "amplfo_freqpolyaft",
      peg$c260 = peg$literalExpectation("amplfo_freqpolyaft", false),
      peg$c261 = "amplfo_freq",
      peg$c262 = peg$literalExpectation("amplfo_freq", false),
      peg$c263 = "eq1_freq",
      peg$c264 = peg$literalExpectation("eq1_freq", false),
      peg$c265 = "eq2_freq",
      peg$c266 = peg$literalExpectation("eq2_freq", false),
      peg$c267 = "eq3_freq",
      peg$c268 = peg$literalExpectation("eq3_freq", false),
      peg$c269 = "eq1_vel2freq",
      peg$c270 = peg$literalExpectation("eq1_vel2freq", false),
      peg$c271 = "eq2_vel2freq",
      peg$c272 = peg$literalExpectation("eq2_vel2freq", false),
      peg$c273 = "eq3_vel2freq",
      peg$c274 = peg$literalExpectation("eq3_vel2freq", false),
      peg$c275 = "eq1_bw",
      peg$c276 = peg$literalExpectation("eq1_bw", false),
      peg$c277 = "eq2_bw",
      peg$c278 = peg$literalExpectation("eq2_bw", false),
      peg$c279 = "eq3_bw",
      peg$c280 = peg$literalExpectation("eq3_bw", false),
      peg$c281 = "eq1_gain",
      peg$c282 = peg$literalExpectation("eq1_gain", false),
      peg$c283 = "eq2_gain",
      peg$c284 = peg$literalExpectation("eq2_gain", false),
      peg$c285 = "eq3_gain",
      peg$c286 = peg$literalExpectation("eq3_gain", false),
      peg$c287 = "eq1_vel2gain",
      peg$c288 = peg$literalExpectation("eq1_vel2gain", false),
      peg$c289 = "eq2_vel2gain",
      peg$c290 = peg$literalExpectation("eq2_vel2gain", false),
      peg$c291 = "eq3_vel2gain",
      peg$c292 = peg$literalExpectation("eq3_vel2gain", false),
      peg$c293 = "effect1",
      peg$c294 = peg$literalExpectation("effect1", false),
      peg$c295 = "effect2",
      peg$c296 = peg$literalExpectation("effect2", false),
      peg$c297 = peg$otherExpectation("integer opcode"),
      peg$c298 = "fillfo_depthcc1",
      peg$c299 = peg$literalExpectation("fillfo_depthcc1", false),
      peg$c300 = "fillfo_depthcc60",
      peg$c301 = peg$literalExpectation("fillfo_depthcc60", false),
      peg$c302 = "fillfo_freqchanaft",
      peg$c303 = peg$literalExpectation("fillfo_freqchanaft", false),
      peg$c304 = "fillfo_freqpolyaft",
      peg$c305 = peg$literalExpectation("fillfo_freqpolyaft", false),
      peg$c306 = "fillfo_depth",
      peg$c307 = peg$literalExpectation("fillfo_depth", false),
      peg$c308 = "lovel",
      peg$c309 = peg$literalExpectation("lovel", false),
      peg$c310 = "hivel",
      peg$c311 = peg$literalExpectation("hivel", false),
      peg$c312 = "lobend",
      peg$c313 = peg$literalExpectation("lobend", false),
      peg$c314 = "hibend",
      peg$c315 = peg$literalExpectation("hibend", false),
      peg$c316 = "lochanaft",
      peg$c317 = peg$literalExpectation("lochanaft", false),
      peg$c318 = "hichanaft",
      peg$c319 = peg$literalExpectation("hichanaft", false),
      peg$c320 = "lochan",
      peg$c321 = peg$literalExpectation("lochan", false),
      peg$c322 = "hichan",
      peg$c323 = peg$literalExpectation("hichan", false),
      peg$c324 = "loprog",
      peg$c325 = peg$literalExpectation("loprog", false),
      peg$c326 = "hiprog",
      peg$c327 = peg$literalExpectation("hiprog", false),
      peg$c328 = "lopolyaft",
      peg$c329 = peg$literalExpectation("lopolyaft", false),
      peg$c330 = "hipolyaft",
      peg$c331 = peg$literalExpectation("hipolyaft", false),
      peg$c332 = "seq_length",
      peg$c333 = peg$literalExpectation("seq_length", false),
      peg$c334 = "seq_position",
      peg$c335 = peg$literalExpectation("seq_position", false),
      peg$c336 = "group",
      peg$c337 = peg$literalExpectation("group", false),
      peg$c338 = "off_by",
      peg$c339 = peg$literalExpectation("off_by", false),
      peg$c340 = "offset_random",
      peg$c341 = peg$literalExpectation("offset_random", false),
      peg$c342 = "offset_cc1",
      peg$c343 = peg$literalExpectation("offset_cc1", false),
      peg$c344 = "offset_cc64",
      peg$c345 = peg$literalExpectation("offset_cc64", false),
      peg$c346 = "offset",
      peg$c347 = peg$literalExpectation("offset", false),
      peg$c348 = "end",
      peg$c349 = peg$literalExpectation("end", false),
      peg$c350 = "count",
      peg$c351 = peg$literalExpectation("count", false),
      peg$c352 = "loop_start",
      peg$c353 = peg$literalExpectation("loop_start", false),
      peg$c354 = "loop_end",
      peg$c355 = peg$literalExpectation("loop_end", false),
      peg$c356 = "transpose",
      peg$c357 = peg$literalExpectation("transpose", false),
      peg$c358 = "tune",
      peg$c359 = peg$literalExpectation("tune", false),
      peg$c360 = "pitch_keytrack",
      peg$c361 = peg$literalExpectation("pitch_keytrack", false),
      peg$c362 = "pitch_veltrack",
      peg$c363 = peg$literalExpectation("pitch_veltrack", false),
      peg$c364 = "pitch_random",
      peg$c365 = peg$literalExpectation("pitch_random", false),
      peg$c366 = "bend_up",
      peg$c367 = peg$literalExpectation("bend_up", false),
      peg$c368 = "bend_down",
      peg$c369 = peg$literalExpectation("bend_down", false),
      peg$c370 = "pitcheg_depth",
      peg$c371 = peg$literalExpectation("pitcheg_depth", false),
      peg$c372 = "fileg_depth",
      peg$c373 = peg$literalExpectation("fileg_depth", false),
      peg$c374 = "fileg_vel2depth",
      peg$c375 = peg$literalExpectation("fileg_vel2depth", false),
      peg$c376 = "fil_keytrack",
      peg$c377 = peg$literalExpectation("fil_keytrack", false),
      peg$c378 = "fil_keycenter",
      peg$c379 = peg$literalExpectation("fil_keycenter", false),
      peg$c380 = "fil_veltrack",
      peg$c381 = peg$literalExpectation("fil_veltrack", false),
      peg$c382 = "fil_random",
      peg$c383 = peg$literalExpectation("fil_random", false),
      peg$c384 = "cutoff_cc1",
      peg$c385 = peg$literalExpectation("cutoff_cc1", false),
      peg$c386 = "cutoff_cc2",
      peg$c387 = peg$literalExpectation("cutoff_cc2", false),
      peg$c388 = "cutoff_chanaft",
      peg$c389 = peg$literalExpectation("cutoff_chanaft", false),
      peg$c390 = "cutoff_polyaft",
      peg$c391 = peg$literalExpectation("cutoff_polyaft", false),
      peg$c392 = "pitchlfo_depthcc1",
      peg$c393 = peg$literalExpectation("pitchlfo_depthcc1", false),
      peg$c394 = "pitchlfo_depthcc60",
      peg$c395 = peg$literalExpectation("pitchlfo_depthcc60", false),
      peg$c396 = "pitchlfo_depthchanaft",
      peg$c397 = peg$literalExpectation("pitchlfo_depthchanaft", false),
      peg$c398 = "pitchlfo_depthpolyaft",
      peg$c399 = peg$literalExpectation("pitchlfo_depthpolyaft", false),
      peg$c400 = "pitchlfo_depth",
      peg$c401 = peg$literalExpectation("pitchlfo_depth", false),
      peg$c402 = "pitcheg_vel2depth",
      peg$c403 = peg$literalExpectation("pitcheg_vel2depth", false),
      peg$c404 = "amp_keycenter",
      peg$c405 = peg$literalExpectation("amp_keycenter", false),
      peg$c406 = "output",
      peg$c407 = peg$literalExpectation("output", false),
      peg$c408 = "xfin_lokey",
      peg$c409 = peg$literalExpectation("xfin_lokey", false),
      peg$c410 = "xfin_hikey",
      peg$c411 = peg$literalExpectation("xfin_hikey", false),
      peg$c412 = "xfin_lovel",
      peg$c413 = peg$literalExpectation("xfin_lovel", false),
      peg$c414 = "xfin_hivel",
      peg$c415 = peg$literalExpectation("xfin_hivel", false),
      peg$c416 = "xfout_lovel",
      peg$c417 = peg$literalExpectation("xfout_lovel", false),
      peg$c418 = "xfout_hivel",
      peg$c419 = peg$literalExpectation("xfout_hivel", false),
      peg$c420 = function(n, i) { return n + i },
      peg$c421 = peg$otherExpectation("sequential float opcode"),
      peg$c422 = "fillfo_freqcc",
      peg$c423 = peg$literalExpectation("fillfo_freqcc", false),
      peg$c424 = "gain_cc",
      peg$c425 = peg$literalExpectation("gain_cc", false),
      peg$c426 = "ampeg_delaycc",
      peg$c427 = peg$literalExpectation("ampeg_delaycc", false),
      peg$c428 = "ampeg_startcc",
      peg$c429 = peg$literalExpectation("ampeg_startcc", false),
      peg$c430 = "ampeg_attackcc",
      peg$c431 = peg$literalExpectation("ampeg_attackcc", false),
      peg$c432 = "ampeg_holdcc",
      peg$c433 = peg$literalExpectation("ampeg_holdcc", false),
      peg$c434 = "ampeg_decaycc",
      peg$c435 = peg$literalExpectation("ampeg_decaycc", false),
      peg$c436 = "ampeg_sustaincc",
      peg$c437 = peg$literalExpectation("ampeg_sustaincc", false),
      peg$c438 = "ampeg_releasecc",
      peg$c439 = peg$literalExpectation("ampeg_releasecc", false),
      peg$c440 = "amplfo_depthcc",
      peg$c441 = peg$literalExpectation("amplfo_depthcc", false),
      peg$c442 = "amplfo_freqcc",
      peg$c443 = peg$literalExpectation("amplfo_freqcc", false),
      peg$c444 = "eq1_freqcc",
      peg$c445 = peg$literalExpectation("eq1_freqcc", false),
      peg$c446 = "eq2_freqcc",
      peg$c447 = peg$literalExpectation("eq2_freqcc", false),
      peg$c448 = "eq3_freqcc",
      peg$c449 = peg$literalExpectation("eq3_freqcc", false),
      peg$c450 = "eq1_bwcc",
      peg$c451 = peg$literalExpectation("eq1_bwcc", false),
      peg$c452 = "eq2_bwcc",
      peg$c453 = peg$literalExpectation("eq2_bwcc", false),
      peg$c454 = "eq3_bwcc",
      peg$c455 = peg$literalExpectation("eq3_bwcc", false),
      peg$c456 = "eq1_gaincc",
      peg$c457 = peg$literalExpectation("eq1_gaincc", false),
      peg$c458 = "eq2_gaincc",
      peg$c459 = peg$literalExpectation("eq2_gaincc", false),
      peg$c460 = "eq3_gaincc",
      peg$c461 = peg$literalExpectation("eq3_gaincc", false),
      peg$c462 = "amp_velcurve_",
      peg$c463 = peg$literalExpectation("amp_velcurve_", false),
      peg$c464 = "fillfo_depthcc",
      peg$c465 = peg$literalExpectation("fillfo_depthcc", false),
      peg$c466 = "xfin_locc",
      peg$c467 = peg$literalExpectation("xfin_locc", false),
      peg$c468 = "xfin_hicc",
      peg$c469 = peg$literalExpectation("xfin_hicc", false),
      peg$c470 = "xfout_locc",
      peg$c471 = peg$literalExpectation("xfout_locc", false),
      peg$c472 = "xfout_hicc",
      peg$c473 = peg$literalExpectation("xfout_hicc", false),
      peg$c474 = "delay_cc",
      peg$c475 = peg$literalExpectation("delay_cc", false),
      peg$c476 = "offset_cc",
      peg$c477 = peg$literalExpectation("offset_cc", false),
      peg$c478 = "pitchlfo_depthcc",
      peg$c479 = peg$literalExpectation("pitchlfo_depthcc", false),
      peg$c480 = "pitchlfo_freqcc",
      peg$c481 = peg$literalExpectation("pitchlfo_freqcc", false),
      peg$c482 = "cutoff_cc",
      peg$c483 = peg$literalExpectation("cutoff_cc", false),
      peg$c484 = "loop_mode",
      peg$c485 = peg$literalExpectation("loop_mode", false),
      peg$c486 = "no_loop",
      peg$c487 = peg$literalExpectation("no_loop", false),
      peg$c488 = "one_shot",
      peg$c489 = peg$literalExpectation("one_shot", false),
      peg$c490 = "loop_continuous",
      peg$c491 = peg$literalExpectation("loop_continuous", false),
      peg$c492 = "loop_sustain",
      peg$c493 = peg$literalExpectation("loop_sustain", false),
      peg$c494 = function(value) { return { loop_mode: value } },
      peg$c495 = /^[0-9]/,
      peg$c496 = peg$classExpectation([["0", "9"]], false, false),
      peg$c497 = /^[1-9]/,
      peg$c498 = peg$classExpectation([["1", "9"]], false, false),
      peg$c499 = /^[eE]/,
      peg$c500 = peg$classExpectation(["e", "E"], false, false),
      peg$c501 = /^[\-+]/,
      peg$c502 = peg$classExpectation(["-", "+"], false, false),
      peg$c503 = function(sign, digits) {
          sign = sign || ""
          return parseInt(sign + digits.join(""), 10)
        },
      peg$c504 = ".",
      peg$c505 = peg$literalExpectation(".", false),
      peg$c506 = function(parts) {
            return parseFloat(parts);
          },
      peg$c507 = function(parts) { return parseFloat(parts); },
      peg$c508 = "0",
      peg$c509 = peg$literalExpectation("0", false),
      peg$c510 = function(sign, decimal) {
         sign = sign || ""
        return parseFloat(sign + decimal)
       },
      peg$c511 = function(pitch, accidental, octave) {
          return (pitch + accidental) + (octave + 1) * 12
        },
      peg$c512 = /^[a-gA-G]/,
      peg$c513 = peg$classExpectation([["a", "g"], ["A", "G"]], false, false),
      peg$c514 = function(note) {
          var pitches = {
            "c": 0,
            "d": 2,
            "e": 4,
            "f": 5,
            "g": 7,
            "a": 9,
            "b": 11
          }
          return pitches[note.toLowerCase()]
        },
      peg$c515 = /^[#b]/,
      peg$c516 = peg$classExpectation(["#", "b"], false, false),
      peg$c517 = function(accidental) {
          switch (accidental) {
            case "#":
              return 1
            case "b":
              return -1
            default:
              return 0
          }
        },
      peg$c518 = function(name, ext) { return name + ext },
      peg$c519 = function(c) { return c },
      peg$c520 = function(chars) {
         return chars.join("")
       },
      peg$c521 = "../",
      peg$c522 = peg$literalExpectation("../", false),
      peg$c523 = ".wav",
      peg$c524 = peg$literalExpectation(".wav", false),
      peg$c525 = ".ogg",
      peg$c526 = peg$literalExpectation(".ogg", false),
      peg$c527 = ".mp3",
      peg$c528 = peg$literalExpectation(".mp3", false),
      peg$c529 = peg$otherExpectation("whitespace"),
      peg$c530 = /^[\t\x0B\f \xA0\uFEFF]/,
      peg$c531 = peg$classExpectation(["\t", "\x0B", "\f", " ", "\xA0", "\uFEFF"], false, false),
      peg$c532 = /^[\n\r\u2028\u2029]/,
      peg$c533 = peg$classExpectation(["\n", "\r", "\u2028", "\u2029"], false, false),
      peg$c534 = peg$otherExpectation("end of line"),
      peg$c535 = "\n",
      peg$c536 = peg$literalExpectation("\n", false),
      peg$c537 = "\r\n",
      peg$c538 = peg$literalExpectation("\r\n", false),
      peg$c539 = "\r",
      peg$c540 = peg$literalExpectation("\r", false),
      peg$c541 = "\u2028",
      peg$c542 = peg$literalExpectation("\u2028", false),
      peg$c543 = "\u2029",
      peg$c544 = peg$literalExpectation("\u2029", false),
      peg$c545 = peg$otherExpectation("comment"),
      peg$c546 = "/*",
      peg$c547 = peg$literalExpectation("/*", false),
      peg$c548 = "*/",
      peg$c549 = peg$literalExpectation("*/", false),
      peg$c550 = "//",
      peg$c551 = peg$literalExpectation("//", false),
      peg$c552 = /^[ \xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000]/,
      peg$c553 = peg$classExpectation([" ", "\xA0", "\u1680", "\u180E", "\u2000", "\u2001", "\u2002", "\u2003", "\u2004", "\u2005", "\u2006", "\u2007", "\u2008", "\u2009", "\u200A", "\u202F", "\u205F", "\u3000"], false, false),
      peg$c554 = ";",
      peg$c555 = peg$literalExpectation(";", false),
      peg$c556 = "}",
      peg$c557 = peg$literalExpectation("}", false),
      peg$c558 = "<control>",
      peg$c559 = peg$literalExpectation("<control>", false),
      peg$c560 = "hint_ram_based",
      peg$c561 = peg$literalExpectation("hint_ram_based", false),
      peg$c562 = "global_volume",
      peg$c563 = peg$literalExpectation("global_volume", false),
      peg$c564 = "lfo06_freq",
      peg$c565 = peg$literalExpectation("lfo06_freq", false),
      peg$c566 = "lfo06_pitch",
      peg$c567 = peg$literalExpectation("lfo06_pitch", false),
      peg$c568 = "lfo06_wave",
      peg$c569 = peg$literalExpectation("lfo06_wave", false),
      peg$c570 = "lfo06_pitch_oncc129",
      peg$c571 = peg$literalExpectation("lfo06_pitch_oncc129", false),
      peg$c572 = "set_cc",
      peg$c573 = peg$literalExpectation("set_cc", false),
      peg$c574 = "lfo06_pitch_oncc",
      peg$c575 = peg$literalExpectation("lfo06_pitch_oncc", false),
      peg$c576 = "amplitude_oncc",
      peg$c577 = peg$literalExpectation("amplitude_oncc", false),
      peg$c578 = "amplitude_curvecc",
      peg$c579 = peg$literalExpectation("amplitude_curvecc", false),
      peg$c580 = "region_label=",
      peg$c581 = peg$literalExpectation("region_label=", false),
      peg$c582 = function(value) { return { region_label: value } },
      peg$c583 = "default_path=",
      peg$c584 = peg$literalExpectation("default_path=", false),
      peg$c585 = function(value) { return { default_path: value } },
      peg$c586 = "v",
      peg$c587 = peg$literalExpectation("v", false),
      peg$c588 = function(digits, value) {
          var param = {}
          var name = "v" + digits.join("")
          param[name] = value
          return param
        },
      peg$c589 = "eg",
      peg$c590 = peg$literalExpectation("eg", false),
      peg$c591 = "_cutoff=",
      peg$c592 = peg$literalExpectation("_cutoff=", false),
      peg$c593 = function(digits, value) {
          var param = {}
          var name = "eg" + digits.join("")
          param[name] = value
          return param
        },
      peg$c594 = "_sustain=",
      peg$c595 = peg$literalExpectation("_sustain=", false),
      peg$c596 = "_pitch=",
      peg$c597 = peg$literalExpectation("_pitch=", false),
      peg$c598 = "_time",
      peg$c599 = peg$literalExpectation("_time", false),
      peg$c600 = function(digits, node, value) {
          var param = {}
          var name = "eg" + digits.join("") + "_time" + node
          param[name] = value
          return param
        },
      peg$c601 = "_level",
      peg$c602 = peg$literalExpectation("_level", false),
      peg$c603 = function(digits, node, value) {
          var param = {}
          var name = "eg" + digits.join("") + "_level" + node
          param[name] = value
          return param
        },
      peg$c604 = "_shape",
      peg$c605 = peg$literalExpectation("_shape", false),
      peg$c606 = function(digits, node, value) {
          var param = {}
          var name = "eg" + digits.join("") + "_shape" + node
          param[name] = value
          return param
        },
      peg$c607 = "lfo",
      peg$c608 = peg$literalExpectation("lfo", false),
      peg$c609 = "_wave=",
      peg$c610 = peg$literalExpectation("_wave=", false),
      peg$c611 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_wave"
          param[name] = value
          return param
        },
      peg$c612 = "_freq=",
      peg$c613 = peg$literalExpectation("_freq=", false),
      peg$c614 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_freq"
          param[name] = value
          return param
        },
      peg$c615 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_pitch"
          param[name] = value
          return param
        },
      peg$c616 = "_delay=",
      peg$c617 = peg$literalExpectation("_delay=", false),
      peg$c618 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_delay"
          param[name] = value
          return param
        },
      peg$c619 = "_amplitude=",
      peg$c620 = peg$literalExpectation("_amplitude=", false),
      peg$c621 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_amplitude"
          param[name] = value
          return param
        },
      peg$c622 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_cutoff"
          param[name] = value
          return param
        },
      peg$c623 = "_phase=",
      peg$c624 = peg$literalExpectation("_phase=", false),
      peg$c625 = function(digits, value) {
          var param = {}
          var name = "lfo" + digits.join("") + "_phase"
          param[name] = value
          return param
        },

      peg$currPos          = 0,
      peg$savedPos         = 0,
      peg$posDetailsCache  = [{ line: 1, column: 1 }],
      peg$maxFailPos       = 0,
      peg$maxFailExpected  = [],
      peg$silentFails      = 0,

      peg$result;

  if ("startRule" in options) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos);
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

  function expected(description, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    );
  }

  function error(message, location) {
    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)

    throw peg$buildSimpleError(message, location);
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: "literal", text: text, ignoreCase: ignoreCase };
  }

  function peg$classExpectation(parts, inverted, ignoreCase) {
    return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
  }

  function peg$anyExpectation() {
    return { type: "any" };
  }

  function peg$endExpectation() {
    return { type: "end" };
  }

  function peg$otherExpectation(description) {
    return { type: "other", description: description };
  }

  function peg$computePosDetails(pos) {
    var details = peg$posDetailsCache[pos], p;

    if (details) {
      return details;
    } else {
      p = pos - 1;
      while (!peg$posDetailsCache[p]) {
        p--;
      }

      details = peg$posDetailsCache[p];
      details = {
        line:   details.line,
        column: details.column
      };

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++;
          details.column = 1;
        } else {
          details.column++;
        }

        p++;
      }

      peg$posDetailsCache[pos] = details;
      return details;
    }
  }

  function peg$computeLocation(startPos, endPos) {
    var startPosDetails = peg$computePosDetails(startPos),
        endPosDetails   = peg$computePosDetails(endPos);

    return {
      start: {
        offset: startPos,
        line:   startPosDetails.line,
        column: startPosDetails.column
      },
      end: {
        offset: endPos,
        line:   endPosDetails.line,
        column: endPosDetails.column
      }
    };
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) { return; }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos;
      peg$maxFailExpected = [];
    }

    peg$maxFailExpected.push(expected);
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    );
  }

  function peg$parsestart() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parse__();
    if (s1 !== peg$FAILED) {
      s2 = peg$parseInstrument();
      if (s2 !== peg$FAILED) {
        s3 = peg$parse__();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c0(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseInstrument() {
    var s0, s1;

    s0 = peg$currPos;
    s1 = peg$parseSourceElements();
    if (s1 === peg$FAILED) {
      s1 = null;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c1(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parseSourceElements() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    s1 = peg$parseSourceElement();
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$currPos;
      s4 = peg$parse__();
      if (s4 !== peg$FAILED) {
        s5 = peg$parseSourceElement();
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$currPos;
        s4 = peg$parse__();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseSourceElement();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c2(s1, s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSourceElement() {
    var s0;

    s0 = peg$parseComment();
    if (s0 === peg$FAILED) {
      s0 = peg$parseHeader();
      if (s0 === peg$FAILED) {
        s0 = peg$parseOpcodeDirective();
      }
    }

    return s0;
  }

  function peg$parseSourceCharacter() {
    var s0;

    if (input.length > peg$currPos) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c3); }
    }

    return s0;
  }

  function peg$parseHeader() {
    var s0, s1;

    peg$silentFails++;
    s0 = peg$parseGlobal();
    if (s0 === peg$FAILED) {
      s0 = peg$parseMaster();
      if (s0 === peg$FAILED) {
        s0 = peg$parseRegion();
        if (s0 === peg$FAILED) {
          s0 = peg$parseGroup();
          if (s0 === peg$FAILED) {
            s0 = peg$parseCurve();
            if (s0 === peg$FAILED) {
              s0 = peg$parseAriaCustomHeader();
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c4); }
    }

    return s0;
  }

  function peg$parseGlobal() {
    var s0;

    if (input.substr(peg$currPos, 8) === peg$c5) {
      s0 = peg$c5;
      peg$currPos += 8;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c6); }
    }

    return s0;
  }

  function peg$parseMaster() {
    var s0;

    if (input.substr(peg$currPos, 8) === peg$c7) {
      s0 = peg$c7;
      peg$currPos += 8;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c8); }
    }

    return s0;
  }

  function peg$parseRegion() {
    var s0;

    if (input.substr(peg$currPos, 8) === peg$c9) {
      s0 = peg$c9;
      peg$currPos += 8;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c10); }
    }

    return s0;
  }

  function peg$parseGroup() {
    var s0;

    if (input.substr(peg$currPos, 7) === peg$c11) {
      s0 = peg$c11;
      peg$currPos += 7;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c12); }
    }

    return s0;
  }

  function peg$parseCurve() {
    var s0;

    if (input.substr(peg$currPos, 7) === peg$c13) {
      s0 = peg$c13;
      peg$currPos += 7;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c14); }
    }

    return s0;
  }

  function peg$parseOpcodeDirective() {
    var s0, s1, s2;

    peg$silentFails++;
    s0 = peg$currPos;
    if (input.substr(peg$currPos, 7) === peg$c16) {
      s1 = peg$c16;
      peg$currPos += 7;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c17); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseFilepath();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c18(s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      if (input.substr(peg$currPos, 4) === peg$c19) {
        s1 = peg$c19;
        peg$currPos += 4;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c20); }
      }
      if (s1 !== peg$FAILED) {
        s2 = peg$parseMidiNoteValue();
        if (s2 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c21(s2);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        if (input.substr(peg$currPos, 7) === peg$c22) {
          s1 = peg$c22;
          peg$currPos += 7;
        } else {
          s1 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c23); }
        }
        if (s1 !== peg$FAILED) {
          if (input.substr(peg$currPos, 7) === peg$c24) {
            s2 = peg$c24;
            peg$currPos += 7;
          } else {
            s2 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c25); }
          }
          if (s2 === peg$FAILED) {
            if (input.substr(peg$currPos, 8) === peg$c26) {
              s2 = peg$c26;
              peg$currPos += 8;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c27); }
            }
          }
          if (s2 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c28(s2);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          if (input.substr(peg$currPos, 11) === peg$c29) {
            s1 = peg$c29;
            peg$currPos += 11;
          } else {
            s1 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c30); }
          }
          if (s1 !== peg$FAILED) {
            if (input.substr(peg$currPos, 6) === peg$c31) {
              s2 = peg$c31;
              peg$currPos += 6;
            } else {
              s2 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c32); }
            }
            if (s2 === peg$FAILED) {
              if (input.substr(peg$currPos, 7) === peg$c33) {
                s2 = peg$c33;
                peg$currPos += 7;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c34); }
              }
              if (s2 === peg$FAILED) {
                if (input.substr(peg$currPos, 5) === peg$c35) {
                  s2 = peg$c35;
                  peg$currPos += 5;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c36); }
                }
                if (s2 === peg$FAILED) {
                  if (input.substr(peg$currPos, 6) === peg$c37) {
                    s2 = peg$c37;
                    peg$currPos += 6;
                  } else {
                    s2 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c38); }
                  }
                }
              }
            }
            if (s2 !== peg$FAILED) {
              peg$savedPos = s0;
              s1 = peg$c39(s2);
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
          if (s0 === peg$FAILED) {
            s0 = peg$currPos;
            if (input.substr(peg$currPos, 9) === peg$c40) {
              s1 = peg$c40;
              peg$currPos += 9;
            } else {
              s1 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c41); }
            }
            if (s1 !== peg$FAILED) {
              if (input.substr(peg$currPos, 4) === peg$c42) {
                s2 = peg$c42;
                peg$currPos += 4;
              } else {
                s2 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c43); }
              }
              if (s2 === peg$FAILED) {
                if (input.substr(peg$currPos, 6) === peg$c44) {
                  s2 = peg$c44;
                  peg$currPos += 6;
                } else {
                  s2 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c45); }
                }
              }
              if (s2 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c46(s2);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
            if (s0 === peg$FAILED) {
              s0 = peg$parseDelayCcDirective();
              if (s0 === peg$FAILED) {
                s0 = peg$parseOffsetCcDirective();
                if (s0 === peg$FAILED) {
                  s0 = peg$parseLoopModeDirective();
                  if (s0 === peg$FAILED) {
                    s0 = peg$parsePitchLfoDepthCcDirective();
                    if (s0 === peg$FAILED) {
                      s0 = peg$parsePitchLfoFreqCcDirective();
                      if (s0 === peg$FAILED) {
                        s0 = peg$currPos;
                        if (input.substr(peg$currPos, 9) === peg$c47) {
                          s1 = peg$c47;
                          peg$currPos += 9;
                        } else {
                          s1 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c48); }
                        }
                        if (s1 !== peg$FAILED) {
                          if (input.substr(peg$currPos, 6) === peg$c49) {
                            s2 = peg$c49;
                            peg$currPos += 6;
                          } else {
                            s2 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c50); }
                          }
                          if (s2 === peg$FAILED) {
                            if (input.substr(peg$currPos, 6) === peg$c51) {
                              s2 = peg$c51;
                              peg$currPos += 6;
                            } else {
                              s2 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c52); }
                            }
                            if (s2 === peg$FAILED) {
                              if (input.substr(peg$currPos, 6) === peg$c53) {
                                s2 = peg$c53;
                                peg$currPos += 6;
                              } else {
                                s2 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c54); }
                              }
                              if (s2 === peg$FAILED) {
                                if (input.substr(peg$currPos, 6) === peg$c55) {
                                  s2 = peg$c55;
                                  peg$currPos += 6;
                                } else {
                                  s2 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c56); }
                                }
                                if (s2 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 6) === peg$c57) {
                                    s2 = peg$c57;
                                    peg$currPos += 6;
                                  } else {
                                    s2 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c58); }
                                  }
                                  if (s2 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 6) === peg$c59) {
                                      s2 = peg$c59;
                                      peg$currPos += 6;
                                    } else {
                                      s2 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c60); }
                                    }
                                  }
                                }
                              }
                            }
                          }
                          if (s2 !== peg$FAILED) {
                            peg$savedPos = s0;
                            s1 = peg$c61(s2);
                            s0 = s1;
                          } else {
                            peg$currPos = s0;
                            s0 = peg$FAILED;
                          }
                        } else {
                          peg$currPos = s0;
                          s0 = peg$FAILED;
                        }
                        if (s0 === peg$FAILED) {
                          s0 = peg$parseCutoffCcDirective();
                          if (s0 === peg$FAILED) {
                            s0 = peg$parseMidiNoteOpcodeDirective();
                            if (s0 === peg$FAILED) {
                              s0 = peg$parseFloatOpcodeDirective();
                              if (s0 === peg$FAILED) {
                                s0 = peg$parseIntegerOpcodeDirective();
                                if (s0 === peg$FAILED) {
                                  s0 = peg$parseCurveOpcodeDirective();
                                  if (s0 === peg$FAILED) {
                                    s0 = peg$parseSequentialFloatDirective();
                                    if (s0 === peg$FAILED) {
                                      s0 = peg$parseSequentialIntegerDirective();
                                      if (s0 === peg$FAILED) {
                                        s0 = peg$parseAriaDefaultPathOpcode();
                                        if (s0 === peg$FAILED) {
                                          s0 = peg$parseAriaCustomTextOpcode();
                                          if (s0 === peg$FAILED) {
                                            s0 = peg$parseAriaCurveOpcode();
                                            if (s0 === peg$FAILED) {
                                              s0 = peg$parseFlexEgOpcode();
                                              if (s0 === peg$FAILED) {
                                                s0 = peg$parseLfoOpcode();
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c15); }
    }

    return s0;
  }

  function peg$parseMidiNoteOpcodeDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parseMidiNoteOpcode();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseMidiNoteValue();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFloatOpcodeDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parseFloatOpcode();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedDecimalLiteral();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseIntegerOpcodeDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parseIntegerOpcode();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedIntegerAsNumber();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseCurveOpcodeDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parseCurveOpcode();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c65) {
          s3 = peg$c65;
          peg$currPos += 4;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c66); }
        }
        if (s3 === peg$FAILED) {
          if (input.substr(peg$currPos, 5) === peg$c67) {
            s3 = peg$c67;
            peg$currPos += 5;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c68); }
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseCurveOpcode() {
    var s0;

    if (input.substr(peg$currPos, 11) === peg$c69) {
      s0 = peg$c69;
      peg$currPos += 11;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c70); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 11) === peg$c71) {
        s0 = peg$c71;
        peg$currPos += 11;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c72); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 10) === peg$c73) {
          s0 = peg$c73;
          peg$currPos += 10;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c74); }
        }
      }
    }

    return s0;
  }

  function peg$parseMidiNoteOpcode() {
    var s0, s1;

    peg$silentFails++;
    if (input.substr(peg$currPos, 5) === peg$c76) {
      s0 = peg$c76;
      peg$currPos += 5;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c77); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 5) === peg$c78) {
        s0 = peg$c78;
        peg$currPos += 5;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c79); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 15) === peg$c80) {
          s0 = peg$c80;
          peg$currPos += 15;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c81); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 8) === peg$c82) {
            s0 = peg$c82;
            peg$currPos += 8;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c83); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 8) === peg$c84) {
              s0 = peg$c84;
              peg$currPos += 8;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c85); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 7) === peg$c86) {
                s0 = peg$c86;
                peg$currPos += 7;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c87); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 7) === peg$c88) {
                  s0 = peg$c88;
                  peg$currPos += 7;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c89); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 5) === peg$c90) {
                    s0 = peg$c90;
                    peg$currPos += 5;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c91); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 11) === peg$c92) {
                      s0 = peg$c92;
                      peg$currPos += 11;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c93); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 13) === peg$c94) {
                        s0 = peg$c94;
                        peg$currPos += 13;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c95); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 11) === peg$c96) {
                          s0 = peg$c96;
                          peg$currPos += 11;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c97); }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c75); }
    }

    return s0;
  }

  function peg$parseFloatOpcode() {
    var s0, s1;

    peg$silentFails++;
    if (input.substr(peg$currPos, 12) === peg$c99) {
      s0 = peg$c99;
      peg$currPos += 12;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c100); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 11) === peg$c101) {
        s0 = peg$c101;
        peg$currPos += 11;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c102); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 11) === peg$c103) {
          s0 = peg$c103;
          peg$currPos += 11;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c104); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 14) === peg$c105) {
            s0 = peg$c105;
            peg$currPos += 14;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c106); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 14) === peg$c107) {
              s0 = peg$c107;
              peg$currPos += 14;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c108); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 6) === peg$c109) {
                s0 = peg$c109;
                peg$currPos += 6;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c110); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 6) === peg$c111) {
                  s0 = peg$c111;
                  peg$currPos += 6;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c112); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 7) === peg$c113) {
                    s0 = peg$c113;
                    peg$currPos += 7;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c114); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 7) === peg$c115) {
                      s0 = peg$c115;
                      peg$currPos += 7;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c116); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 5) === peg$c117) {
                        s0 = peg$c117;
                        peg$currPos += 5;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c118); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 5) === peg$c119) {
                          s0 = peg$c119;
                          peg$currPos += 5;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c120); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 12) === peg$c121) {
                            s0 = peg$c121;
                            peg$currPos += 12;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c122); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 9) === peg$c123) {
                              s0 = peg$c123;
                              peg$currPos += 9;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c124); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 9) === peg$c125) {
                                s0 = peg$c125;
                                peg$currPos += 9;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c126); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 5) === peg$c127) {
                                  s0 = peg$c127;
                                  peg$currPos += 5;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c128); }
                                }
                                if (s0 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 10) === peg$c129) {
                                    s0 = peg$c129;
                                    peg$currPos += 10;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c130); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 11) === peg$c131) {
                                      s0 = peg$c131;
                                      peg$currPos += 11;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c132); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 13) === peg$c133) {
                                        s0 = peg$c133;
                                        peg$currPos += 13;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c134); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 13) === peg$c135) {
                                          s0 = peg$c135;
                                          peg$currPos += 13;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c136); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 14) === peg$c137) {
                                            s0 = peg$c137;
                                            peg$currPos += 14;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c138); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 12) === peg$c139) {
                                              s0 = peg$c139;
                                              peg$currPos += 12;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c140); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 13) === peg$c141) {
                                                s0 = peg$c141;
                                                peg$currPos += 13;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c142); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 15) === peg$c143) {
                                                  s0 = peg$c143;
                                                  peg$currPos += 15;
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c144); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 15) === peg$c145) {
                                                    s0 = peg$c145;
                                                    peg$currPos += 15;
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c146); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 17) === peg$c147) {
                                                      s0 = peg$c147;
                                                      peg$currPos += 17;
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c148); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 18) === peg$c149) {
                                                        s0 = peg$c149;
                                                        peg$currPos += 18;
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c150); }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 16) === peg$c151) {
                                                          s0 = peg$c151;
                                                          peg$currPos += 16;
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c152); }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 17) === peg$c153) {
                                                            s0 = peg$c153;
                                                            peg$currPos += 17;
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c154); }
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 19) === peg$c155) {
                                                              s0 = peg$c155;
                                                              peg$currPos += 19;
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c156); }
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 14) === peg$c157) {
                                                                s0 = peg$c157;
                                                                peg$currPos += 14;
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c158); }
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 13) === peg$c159) {
                                                                  s0 = peg$c159;
                                                                  peg$currPos += 13;
                                                                } else {
                                                                  s0 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c160); }
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 16) === peg$c161) {
                                                                    s0 = peg$c161;
                                                                    peg$currPos += 16;
                                                                  } else {
                                                                    s0 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c162); }
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 17) === peg$c163) {
                                                                      s0 = peg$c163;
                                                                      peg$currPos += 17;
                                                                    } else {
                                                                      s0 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c164); }
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 20) === peg$c165) {
                                                                        s0 = peg$c165;
                                                                        peg$currPos += 20;
                                                                      } else {
                                                                        s0 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c166); }
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 20) === peg$c167) {
                                                                          s0 = peg$c167;
                                                                          peg$currPos += 20;
                                                                        } else {
                                                                          s0 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c168); }
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 13) === peg$c169) {
                                                                            s0 = peg$c169;
                                                                            peg$currPos += 13;
                                                                          } else {
                                                                            s0 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c170); }
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 6) === peg$c171) {
                                                                              s0 = peg$c171;
                                                                              peg$currPos += 6;
                                                                            } else {
                                                                              s0 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c172); }
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 9) === peg$c173) {
                                                                                s0 = peg$c173;
                                                                                peg$currPos += 9;
                                                                              } else {
                                                                                s0 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c174); }
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 11) === peg$c175) {
                                                                                  s0 = peg$c175;
                                                                                  peg$currPos += 11;
                                                                                } else {
                                                                                  s0 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c176); }
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 11) === peg$c177) {
                                                                                    s0 = peg$c177;
                                                                                    peg$currPos += 11;
                                                                                  } else {
                                                                                    s0 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c178); }
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 12) === peg$c179) {
                                                                                      s0 = peg$c179;
                                                                                      peg$currPos += 12;
                                                                                    } else {
                                                                                      s0 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c180); }
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 10) === peg$c181) {
                                                                                        s0 = peg$c181;
                                                                                        peg$currPos += 10;
                                                                                      } else {
                                                                                        s0 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c182); }
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 11) === peg$c183) {
                                                                                          s0 = peg$c183;
                                                                                          peg$currPos += 11;
                                                                                        } else {
                                                                                          s0 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c184); }
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          if (input.substr(peg$currPos, 13) === peg$c185) {
                                                                                            s0 = peg$c185;
                                                                                            peg$currPos += 13;
                                                                                          } else {
                                                                                            s0 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c186); }
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 13) === peg$c187) {
                                                                                              s0 = peg$c187;
                                                                                              peg$currPos += 13;
                                                                                            } else {
                                                                                              s0 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c188); }
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 15) === peg$c189) {
                                                                                                s0 = peg$c189;
                                                                                                peg$currPos += 15;
                                                                                              } else {
                                                                                                s0 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c190); }
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 16) === peg$c191) {
                                                                                                  s0 = peg$c191;
                                                                                                  peg$currPos += 16;
                                                                                                } else {
                                                                                                  s0 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c192); }
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  if (input.substr(peg$currPos, 14) === peg$c193) {
                                                                                                    s0 = peg$c193;
                                                                                                    peg$currPos += 14;
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c194); }
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 15) === peg$c195) {
                                                                                                      s0 = peg$c195;
                                                                                                      peg$currPos += 15;
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c196); }
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 17) === peg$c197) {
                                                                                                        s0 = peg$c197;
                                                                                                        peg$currPos += 17;
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c198); }
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        if (input.substr(peg$currPos, 17) === peg$c199) {
                                                                                                          s0 = peg$c199;
                                                                                                          peg$currPos += 17;
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c200); }
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 6) === peg$c201) {
                                                                                                            s0 = peg$c201;
                                                                                                            peg$currPos += 6;
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c202); }
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 3) === peg$c203) {
                                                                                                              s0 = peg$c203;
                                                                                                              peg$currPos += 3;
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c204); }
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 5) === peg$c205) {
                                                                                                                s0 = peg$c205;
                                                                                                                peg$currPos += 5;
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c206); }
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 8) === peg$c207) {
                                                                                                                  s0 = peg$c207;
                                                                                                                  peg$currPos += 8;
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c208); }
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 12) === peg$c209) {
                                                                                                                    s0 = peg$c209;
                                                                                                                    peg$currPos += 12;
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c210); }
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 12) === peg$c211) {
                                                                                                                      s0 = peg$c211;
                                                                                                                      peg$currPos += 12;
                                                                                                                    } else {
                                                                                                                      s0 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c212); }
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 14) === peg$c213) {
                                                                                                                        s0 = peg$c213;
                                                                                                                        peg$currPos += 14;
                                                                                                                      } else {
                                                                                                                        s0 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c214); }
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 16) === peg$c215) {
                                                                                                                          s0 = peg$c215;
                                                                                                                          peg$currPos += 16;
                                                                                                                        } else {
                                                                                                                          s0 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c216); }
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 10) === peg$c217) {
                                                                                                                            s0 = peg$c217;
                                                                                                                            peg$currPos += 10;
                                                                                                                          } else {
                                                                                                                            s0 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c218); }
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 8) === peg$c219) {
                                                                                                                              s0 = peg$c219;
                                                                                                                              peg$currPos += 8;
                                                                                                                            } else {
                                                                                                                              s0 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c220); }
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 11) === peg$c221) {
                                                                                                                                s0 = peg$c221;
                                                                                                                                peg$currPos += 11;
                                                                                                                              } else {
                                                                                                                                s0 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c222); }
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                if (input.substr(peg$currPos, 11) === peg$c223) {
                                                                                                                                  s0 = peg$c223;
                                                                                                                                  peg$currPos += 11;
                                                                                                                                } else {
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c224); }
                                                                                                                                }
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 12) === peg$c225) {
                                                                                                                                    s0 = peg$c225;
                                                                                                                                    peg$currPos += 12;
                                                                                                                                  } else {
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c226); }
                                                                                                                                  }
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    if (input.substr(peg$currPos, 10) === peg$c227) {
                                                                                                                                      s0 = peg$c227;
                                                                                                                                      peg$currPos += 10;
                                                                                                                                    } else {
                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c228); }
                                                                                                                                    }
                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                      if (input.substr(peg$currPos, 11) === peg$c229) {
                                                                                                                                        s0 = peg$c229;
                                                                                                                                        peg$currPos += 11;
                                                                                                                                      } else {
                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c230); }
                                                                                                                                      }
                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                        if (input.substr(peg$currPos, 13) === peg$c231) {
                                                                                                                                          s0 = peg$c231;
                                                                                                                                          peg$currPos += 13;
                                                                                                                                        } else {
                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c232); }
                                                                                                                                        }
                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                          if (input.substr(peg$currPos, 13) === peg$c233) {
                                                                                                                                            s0 = peg$c233;
                                                                                                                                            peg$currPos += 13;
                                                                                                                                          } else {
                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c234); }
                                                                                                                                          }
                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                            if (input.substr(peg$currPos, 15) === peg$c235) {
                                                                                                                                              s0 = peg$c235;
                                                                                                                                              peg$currPos += 15;
                                                                                                                                            } else {
                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c236); }
                                                                                                                                            }
                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                              if (input.substr(peg$currPos, 16) === peg$c237) {
                                                                                                                                                s0 = peg$c237;
                                                                                                                                                peg$currPos += 16;
                                                                                                                                              } else {
                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c238); }
                                                                                                                                              }
                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                if (input.substr(peg$currPos, 14) === peg$c239) {
                                                                                                                                                  s0 = peg$c239;
                                                                                                                                                  peg$currPos += 14;
                                                                                                                                                } else {
                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c240); }
                                                                                                                                                }
                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                  if (input.substr(peg$currPos, 15) === peg$c241) {
                                                                                                                                                    s0 = peg$c241;
                                                                                                                                                    peg$currPos += 15;
                                                                                                                                                  } else {
                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c242); }
                                                                                                                                                  }
                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                    if (input.substr(peg$currPos, 17) === peg$c243) {
                                                                                                                                                      s0 = peg$c243;
                                                                                                                                                      peg$currPos += 17;
                                                                                                                                                    } else {
                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c244); }
                                                                                                                                                    }
                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                      if (input.substr(peg$currPos, 17) === peg$c245) {
                                                                                                                                                        s0 = peg$c245;
                                                                                                                                                        peg$currPos += 17;
                                                                                                                                                      } else {
                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c246); }
                                                                                                                                                      }
                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                        if (input.substr(peg$currPos, 12) === peg$c247) {
                                                                                                                                                          s0 = peg$c247;
                                                                                                                                                          peg$currPos += 12;
                                                                                                                                                        } else {
                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c248); }
                                                                                                                                                        }
                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                          if (input.substr(peg$currPos, 11) === peg$c249) {
                                                                                                                                                            s0 = peg$c249;
                                                                                                                                                            peg$currPos += 11;
                                                                                                                                                          } else {
                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c250); }
                                                                                                                                                          }
                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                            if (input.substr(peg$currPos, 19) === peg$c251) {
                                                                                                                                                              s0 = peg$c251;
                                                                                                                                                              peg$currPos += 19;
                                                                                                                                                            } else {
                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c252); }
                                                                                                                                                            }
                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                              if (input.substr(peg$currPos, 19) === peg$c253) {
                                                                                                                                                                s0 = peg$c253;
                                                                                                                                                                peg$currPos += 19;
                                                                                                                                                              } else {
                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c254); }
                                                                                                                                                              }
                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                if (input.substr(peg$currPos, 12) === peg$c255) {
                                                                                                                                                                  s0 = peg$c255;
                                                                                                                                                                  peg$currPos += 12;
                                                                                                                                                                } else {
                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c256); }
                                                                                                                                                                }
                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                  if (input.substr(peg$currPos, 18) === peg$c257) {
                                                                                                                                                                    s0 = peg$c257;
                                                                                                                                                                    peg$currPos += 18;
                                                                                                                                                                  } else {
                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c258); }
                                                                                                                                                                  }
                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                    if (input.substr(peg$currPos, 18) === peg$c259) {
                                                                                                                                                                      s0 = peg$c259;
                                                                                                                                                                      peg$currPos += 18;
                                                                                                                                                                    } else {
                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c260); }
                                                                                                                                                                    }
                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                      if (input.substr(peg$currPos, 11) === peg$c261) {
                                                                                                                                                                        s0 = peg$c261;
                                                                                                                                                                        peg$currPos += 11;
                                                                                                                                                                      } else {
                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c262); }
                                                                                                                                                                      }
                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                        if (input.substr(peg$currPos, 8) === peg$c263) {
                                                                                                                                                                          s0 = peg$c263;
                                                                                                                                                                          peg$currPos += 8;
                                                                                                                                                                        } else {
                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c264); }
                                                                                                                                                                        }
                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                          if (input.substr(peg$currPos, 8) === peg$c265) {
                                                                                                                                                                            s0 = peg$c265;
                                                                                                                                                                            peg$currPos += 8;
                                                                                                                                                                          } else {
                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c266); }
                                                                                                                                                                          }
                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                            if (input.substr(peg$currPos, 8) === peg$c267) {
                                                                                                                                                                              s0 = peg$c267;
                                                                                                                                                                              peg$currPos += 8;
                                                                                                                                                                            } else {
                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c268); }
                                                                                                                                                                            }
                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                              if (input.substr(peg$currPos, 12) === peg$c269) {
                                                                                                                                                                                s0 = peg$c269;
                                                                                                                                                                                peg$currPos += 12;
                                                                                                                                                                              } else {
                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c270); }
                                                                                                                                                                              }
                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                if (input.substr(peg$currPos, 12) === peg$c271) {
                                                                                                                                                                                  s0 = peg$c271;
                                                                                                                                                                                  peg$currPos += 12;
                                                                                                                                                                                } else {
                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c272); }
                                                                                                                                                                                }
                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                  if (input.substr(peg$currPos, 12) === peg$c273) {
                                                                                                                                                                                    s0 = peg$c273;
                                                                                                                                                                                    peg$currPos += 12;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c274); }
                                                                                                                                                                                  }
                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                    if (input.substr(peg$currPos, 6) === peg$c275) {
                                                                                                                                                                                      s0 = peg$c275;
                                                                                                                                                                                      peg$currPos += 6;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c276); }
                                                                                                                                                                                    }
                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                      if (input.substr(peg$currPos, 6) === peg$c277) {
                                                                                                                                                                                        s0 = peg$c277;
                                                                                                                                                                                        peg$currPos += 6;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c278); }
                                                                                                                                                                                      }
                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                        if (input.substr(peg$currPos, 6) === peg$c279) {
                                                                                                                                                                                          s0 = peg$c279;
                                                                                                                                                                                          peg$currPos += 6;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c280); }
                                                                                                                                                                                        }
                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                          if (input.substr(peg$currPos, 8) === peg$c281) {
                                                                                                                                                                                            s0 = peg$c281;
                                                                                                                                                                                            peg$currPos += 8;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            s0 = peg$FAILED;
                                                                                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c282); }
                                                                                                                                                                                          }
                                                                                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                                                                                            if (input.substr(peg$currPos, 8) === peg$c283) {
                                                                                                                                                                                              s0 = peg$c283;
                                                                                                                                                                                              peg$currPos += 8;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              s0 = peg$FAILED;
                                                                                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c284); }
                                                                                                                                                                                            }
                                                                                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                                                                                              if (input.substr(peg$currPos, 8) === peg$c285) {
                                                                                                                                                                                                s0 = peg$c285;
                                                                                                                                                                                                peg$currPos += 8;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                s0 = peg$FAILED;
                                                                                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c286); }
                                                                                                                                                                                              }
                                                                                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                                                                                if (input.substr(peg$currPos, 12) === peg$c287) {
                                                                                                                                                                                                  s0 = peg$c287;
                                                                                                                                                                                                  peg$currPos += 12;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c288); }
                                                                                                                                                                                                }
                                                                                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                                                                                  if (input.substr(peg$currPos, 12) === peg$c289) {
                                                                                                                                                                                                    s0 = peg$c289;
                                                                                                                                                                                                    peg$currPos += 12;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c290); }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                                                                                    if (input.substr(peg$currPos, 12) === peg$c291) {
                                                                                                                                                                                                      s0 = peg$c291;
                                                                                                                                                                                                      peg$currPos += 12;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      s0 = peg$FAILED;
                                                                                                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c292); }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                                                                                                      if (input.substr(peg$currPos, 7) === peg$c293) {
                                                                                                                                                                                                        s0 = peg$c293;
                                                                                                                                                                                                        peg$currPos += 7;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        s0 = peg$FAILED;
                                                                                                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c294); }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                                                                                                        if (input.substr(peg$currPos, 7) === peg$c295) {
                                                                                                                                                                                                          s0 = peg$c295;
                                                                                                                                                                                                          peg$currPos += 7;
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          s0 = peg$FAILED;
                                                                                                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c296); }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                                                                                                          s0 = peg$parseAriaCustomFloatOpcode();
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c98); }
    }

    return s0;
  }

  function peg$parseIntegerOpcode() {
    var s0, s1;

    peg$silentFails++;
    if (input.substr(peg$currPos, 15) === peg$c298) {
      s0 = peg$c298;
      peg$currPos += 15;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c299); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 16) === peg$c300) {
        s0 = peg$c300;
        peg$currPos += 16;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c301); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 18) === peg$c302) {
          s0 = peg$c302;
          peg$currPos += 18;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c303); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 18) === peg$c304) {
            s0 = peg$c304;
            peg$currPos += 18;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c305); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 18) === peg$c302) {
              s0 = peg$c302;
              peg$currPos += 18;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c303); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 18) === peg$c304) {
                s0 = peg$c304;
                peg$currPos += 18;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c305); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 12) === peg$c306) {
                  s0 = peg$c306;
                  peg$currPos += 12;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c307); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 5) === peg$c308) {
                    s0 = peg$c308;
                    peg$currPos += 5;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c309); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 5) === peg$c310) {
                      s0 = peg$c310;
                      peg$currPos += 5;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c311); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 6) === peg$c312) {
                        s0 = peg$c312;
                        peg$currPos += 6;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c313); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 6) === peg$c314) {
                          s0 = peg$c314;
                          peg$currPos += 6;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c315); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 9) === peg$c316) {
                            s0 = peg$c316;
                            peg$currPos += 9;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c317); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 9) === peg$c318) {
                              s0 = peg$c318;
                              peg$currPos += 9;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c319); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 6) === peg$c320) {
                                s0 = peg$c320;
                                peg$currPos += 6;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c321); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 6) === peg$c322) {
                                  s0 = peg$c322;
                                  peg$currPos += 6;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c323); }
                                }
                                if (s0 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 6) === peg$c324) {
                                    s0 = peg$c324;
                                    peg$currPos += 6;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c325); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 6) === peg$c326) {
                                      s0 = peg$c326;
                                      peg$currPos += 6;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c327); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 9) === peg$c328) {
                                        s0 = peg$c328;
                                        peg$currPos += 9;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c329); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 9) === peg$c330) {
                                          s0 = peg$c330;
                                          peg$currPos += 9;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c331); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 10) === peg$c332) {
                                            s0 = peg$c332;
                                            peg$currPos += 10;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c333); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 12) === peg$c334) {
                                              s0 = peg$c334;
                                              peg$currPos += 12;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c335); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 5) === peg$c336) {
                                                s0 = peg$c336;
                                                peg$currPos += 5;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c337); }
                                              }
                                              if (s0 === peg$FAILED) {
                                                if (input.substr(peg$currPos, 6) === peg$c338) {
                                                  s0 = peg$c338;
                                                  peg$currPos += 6;
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) { peg$fail(peg$c339); }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  if (input.substr(peg$currPos, 13) === peg$c340) {
                                                    s0 = peg$c340;
                                                    peg$currPos += 13;
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) { peg$fail(peg$c341); }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    if (input.substr(peg$currPos, 10) === peg$c342) {
                                                      s0 = peg$c342;
                                                      peg$currPos += 10;
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (peg$silentFails === 0) { peg$fail(peg$c343); }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      if (input.substr(peg$currPos, 11) === peg$c344) {
                                                        s0 = peg$c344;
                                                        peg$currPos += 11;
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (peg$silentFails === 0) { peg$fail(peg$c345); }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        if (input.substr(peg$currPos, 6) === peg$c346) {
                                                          s0 = peg$c346;
                                                          peg$currPos += 6;
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (peg$silentFails === 0) { peg$fail(peg$c347); }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          if (input.substr(peg$currPos, 3) === peg$c348) {
                                                            s0 = peg$c348;
                                                            peg$currPos += 3;
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (peg$silentFails === 0) { peg$fail(peg$c349); }
                                                          }
                                                          if (s0 === peg$FAILED) {
                                                            if (input.substr(peg$currPos, 5) === peg$c350) {
                                                              s0 = peg$c350;
                                                              peg$currPos += 5;
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (peg$silentFails === 0) { peg$fail(peg$c351); }
                                                            }
                                                            if (s0 === peg$FAILED) {
                                                              if (input.substr(peg$currPos, 10) === peg$c352) {
                                                                s0 = peg$c352;
                                                                peg$currPos += 10;
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (peg$silentFails === 0) { peg$fail(peg$c353); }
                                                              }
                                                              if (s0 === peg$FAILED) {
                                                                if (input.substr(peg$currPos, 8) === peg$c354) {
                                                                  s0 = peg$c354;
                                                                  peg$currPos += 8;
                                                                } else {
                                                                  s0 = peg$FAILED;
                                                                  if (peg$silentFails === 0) { peg$fail(peg$c355); }
                                                                }
                                                                if (s0 === peg$FAILED) {
                                                                  if (input.substr(peg$currPos, 9) === peg$c356) {
                                                                    s0 = peg$c356;
                                                                    peg$currPos += 9;
                                                                  } else {
                                                                    s0 = peg$FAILED;
                                                                    if (peg$silentFails === 0) { peg$fail(peg$c357); }
                                                                  }
                                                                  if (s0 === peg$FAILED) {
                                                                    if (input.substr(peg$currPos, 4) === peg$c358) {
                                                                      s0 = peg$c358;
                                                                      peg$currPos += 4;
                                                                    } else {
                                                                      s0 = peg$FAILED;
                                                                      if (peg$silentFails === 0) { peg$fail(peg$c359); }
                                                                    }
                                                                    if (s0 === peg$FAILED) {
                                                                      if (input.substr(peg$currPos, 4) === peg$c358) {
                                                                        s0 = peg$c358;
                                                                        peg$currPos += 4;
                                                                      } else {
                                                                        s0 = peg$FAILED;
                                                                        if (peg$silentFails === 0) { peg$fail(peg$c359); }
                                                                      }
                                                                      if (s0 === peg$FAILED) {
                                                                        if (input.substr(peg$currPos, 14) === peg$c360) {
                                                                          s0 = peg$c360;
                                                                          peg$currPos += 14;
                                                                        } else {
                                                                          s0 = peg$FAILED;
                                                                          if (peg$silentFails === 0) { peg$fail(peg$c361); }
                                                                        }
                                                                        if (s0 === peg$FAILED) {
                                                                          if (input.substr(peg$currPos, 14) === peg$c362) {
                                                                            s0 = peg$c362;
                                                                            peg$currPos += 14;
                                                                          } else {
                                                                            s0 = peg$FAILED;
                                                                            if (peg$silentFails === 0) { peg$fail(peg$c363); }
                                                                          }
                                                                          if (s0 === peg$FAILED) {
                                                                            if (input.substr(peg$currPos, 12) === peg$c364) {
                                                                              s0 = peg$c364;
                                                                              peg$currPos += 12;
                                                                            } else {
                                                                              s0 = peg$FAILED;
                                                                              if (peg$silentFails === 0) { peg$fail(peg$c365); }
                                                                            }
                                                                            if (s0 === peg$FAILED) {
                                                                              if (input.substr(peg$currPos, 7) === peg$c366) {
                                                                                s0 = peg$c366;
                                                                                peg$currPos += 7;
                                                                              } else {
                                                                                s0 = peg$FAILED;
                                                                                if (peg$silentFails === 0) { peg$fail(peg$c367); }
                                                                              }
                                                                              if (s0 === peg$FAILED) {
                                                                                if (input.substr(peg$currPos, 9) === peg$c368) {
                                                                                  s0 = peg$c368;
                                                                                  peg$currPos += 9;
                                                                                } else {
                                                                                  s0 = peg$FAILED;
                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c369); }
                                                                                }
                                                                                if (s0 === peg$FAILED) {
                                                                                  if (input.substr(peg$currPos, 13) === peg$c370) {
                                                                                    s0 = peg$c370;
                                                                                    peg$currPos += 13;
                                                                                  } else {
                                                                                    s0 = peg$FAILED;
                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c371); }
                                                                                  }
                                                                                  if (s0 === peg$FAILED) {
                                                                                    if (input.substr(peg$currPos, 11) === peg$c372) {
                                                                                      s0 = peg$c372;
                                                                                      peg$currPos += 11;
                                                                                    } else {
                                                                                      s0 = peg$FAILED;
                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c373); }
                                                                                    }
                                                                                    if (s0 === peg$FAILED) {
                                                                                      if (input.substr(peg$currPos, 15) === peg$c374) {
                                                                                        s0 = peg$c374;
                                                                                        peg$currPos += 15;
                                                                                      } else {
                                                                                        s0 = peg$FAILED;
                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c375); }
                                                                                      }
                                                                                      if (s0 === peg$FAILED) {
                                                                                        if (input.substr(peg$currPos, 12) === peg$c376) {
                                                                                          s0 = peg$c376;
                                                                                          peg$currPos += 12;
                                                                                        } else {
                                                                                          s0 = peg$FAILED;
                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c377); }
                                                                                        }
                                                                                        if (s0 === peg$FAILED) {
                                                                                          if (input.substr(peg$currPos, 13) === peg$c378) {
                                                                                            s0 = peg$c378;
                                                                                            peg$currPos += 13;
                                                                                          } else {
                                                                                            s0 = peg$FAILED;
                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c379); }
                                                                                          }
                                                                                          if (s0 === peg$FAILED) {
                                                                                            if (input.substr(peg$currPos, 12) === peg$c380) {
                                                                                              s0 = peg$c380;
                                                                                              peg$currPos += 12;
                                                                                            } else {
                                                                                              s0 = peg$FAILED;
                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c381); }
                                                                                            }
                                                                                            if (s0 === peg$FAILED) {
                                                                                              if (input.substr(peg$currPos, 10) === peg$c382) {
                                                                                                s0 = peg$c382;
                                                                                                peg$currPos += 10;
                                                                                              } else {
                                                                                                s0 = peg$FAILED;
                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c383); }
                                                                                              }
                                                                                              if (s0 === peg$FAILED) {
                                                                                                if (input.substr(peg$currPos, 10) === peg$c384) {
                                                                                                  s0 = peg$c384;
                                                                                                  peg$currPos += 10;
                                                                                                } else {
                                                                                                  s0 = peg$FAILED;
                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c385); }
                                                                                                }
                                                                                                if (s0 === peg$FAILED) {
                                                                                                  if (input.substr(peg$currPos, 10) === peg$c386) {
                                                                                                    s0 = peg$c386;
                                                                                                    peg$currPos += 10;
                                                                                                  } else {
                                                                                                    s0 = peg$FAILED;
                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c387); }
                                                                                                  }
                                                                                                  if (s0 === peg$FAILED) {
                                                                                                    if (input.substr(peg$currPos, 14) === peg$c388) {
                                                                                                      s0 = peg$c388;
                                                                                                      peg$currPos += 14;
                                                                                                    } else {
                                                                                                      s0 = peg$FAILED;
                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c389); }
                                                                                                    }
                                                                                                    if (s0 === peg$FAILED) {
                                                                                                      if (input.substr(peg$currPos, 14) === peg$c390) {
                                                                                                        s0 = peg$c390;
                                                                                                        peg$currPos += 14;
                                                                                                      } else {
                                                                                                        s0 = peg$FAILED;
                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c391); }
                                                                                                      }
                                                                                                      if (s0 === peg$FAILED) {
                                                                                                        if (input.substr(peg$currPos, 17) === peg$c392) {
                                                                                                          s0 = peg$c392;
                                                                                                          peg$currPos += 17;
                                                                                                        } else {
                                                                                                          s0 = peg$FAILED;
                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c393); }
                                                                                                        }
                                                                                                        if (s0 === peg$FAILED) {
                                                                                                          if (input.substr(peg$currPos, 18) === peg$c394) {
                                                                                                            s0 = peg$c394;
                                                                                                            peg$currPos += 18;
                                                                                                          } else {
                                                                                                            s0 = peg$FAILED;
                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c395); }
                                                                                                          }
                                                                                                          if (s0 === peg$FAILED) {
                                                                                                            if (input.substr(peg$currPos, 21) === peg$c396) {
                                                                                                              s0 = peg$c396;
                                                                                                              peg$currPos += 21;
                                                                                                            } else {
                                                                                                              s0 = peg$FAILED;
                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c397); }
                                                                                                            }
                                                                                                            if (s0 === peg$FAILED) {
                                                                                                              if (input.substr(peg$currPos, 21) === peg$c398) {
                                                                                                                s0 = peg$c398;
                                                                                                                peg$currPos += 21;
                                                                                                              } else {
                                                                                                                s0 = peg$FAILED;
                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c399); }
                                                                                                              }
                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                if (input.substr(peg$currPos, 14) === peg$c400) {
                                                                                                                  s0 = peg$c400;
                                                                                                                  peg$currPos += 14;
                                                                                                                } else {
                                                                                                                  s0 = peg$FAILED;
                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c401); }
                                                                                                                }
                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                  if (input.substr(peg$currPos, 17) === peg$c402) {
                                                                                                                    s0 = peg$c402;
                                                                                                                    peg$currPos += 17;
                                                                                                                  } else {
                                                                                                                    s0 = peg$FAILED;
                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c403); }
                                                                                                                  }
                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                    if (input.substr(peg$currPos, 13) === peg$c404) {
                                                                                                                      s0 = peg$c404;
                                                                                                                      peg$currPos += 13;
                                                                                                                    } else {
                                                                                                                      s0 = peg$FAILED;
                                                                                                                      if (peg$silentFails === 0) { peg$fail(peg$c405); }
                                                                                                                    }
                                                                                                                    if (s0 === peg$FAILED) {
                                                                                                                      if (input.substr(peg$currPos, 6) === peg$c406) {
                                                                                                                        s0 = peg$c406;
                                                                                                                        peg$currPos += 6;
                                                                                                                      } else {
                                                                                                                        s0 = peg$FAILED;
                                                                                                                        if (peg$silentFails === 0) { peg$fail(peg$c407); }
                                                                                                                      }
                                                                                                                      if (s0 === peg$FAILED) {
                                                                                                                        if (input.substr(peg$currPos, 10) === peg$c408) {
                                                                                                                          s0 = peg$c408;
                                                                                                                          peg$currPos += 10;
                                                                                                                        } else {
                                                                                                                          s0 = peg$FAILED;
                                                                                                                          if (peg$silentFails === 0) { peg$fail(peg$c409); }
                                                                                                                        }
                                                                                                                        if (s0 === peg$FAILED) {
                                                                                                                          if (input.substr(peg$currPos, 10) === peg$c410) {
                                                                                                                            s0 = peg$c410;
                                                                                                                            peg$currPos += 10;
                                                                                                                          } else {
                                                                                                                            s0 = peg$FAILED;
                                                                                                                            if (peg$silentFails === 0) { peg$fail(peg$c411); }
                                                                                                                          }
                                                                                                                          if (s0 === peg$FAILED) {
                                                                                                                            if (input.substr(peg$currPos, 10) === peg$c412) {
                                                                                                                              s0 = peg$c412;
                                                                                                                              peg$currPos += 10;
                                                                                                                            } else {
                                                                                                                              s0 = peg$FAILED;
                                                                                                                              if (peg$silentFails === 0) { peg$fail(peg$c413); }
                                                                                                                            }
                                                                                                                            if (s0 === peg$FAILED) {
                                                                                                                              if (input.substr(peg$currPos, 10) === peg$c414) {
                                                                                                                                s0 = peg$c414;
                                                                                                                                peg$currPos += 10;
                                                                                                                              } else {
                                                                                                                                s0 = peg$FAILED;
                                                                                                                                if (peg$silentFails === 0) { peg$fail(peg$c415); }
                                                                                                                              }
                                                                                                                              if (s0 === peg$FAILED) {
                                                                                                                                if (input.substr(peg$currPos, 11) === peg$c416) {
                                                                                                                                  s0 = peg$c416;
                                                                                                                                  peg$currPos += 11;
                                                                                                                                } else {
                                                                                                                                  s0 = peg$FAILED;
                                                                                                                                  if (peg$silentFails === 0) { peg$fail(peg$c417); }
                                                                                                                                }
                                                                                                                                if (s0 === peg$FAILED) {
                                                                                                                                  if (input.substr(peg$currPos, 11) === peg$c418) {
                                                                                                                                    s0 = peg$c418;
                                                                                                                                    peg$currPos += 11;
                                                                                                                                  } else {
                                                                                                                                    s0 = peg$FAILED;
                                                                                                                                    if (peg$silentFails === 0) { peg$fail(peg$c419); }
                                                                                                                                  }
                                                                                                                                  if (s0 === peg$FAILED) {
                                                                                                                                    s0 = peg$parseAriaCustomIntegerOpcode();
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c297); }
    }

    return s0;
  }

  function peg$parseSequentialFloatDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = peg$parseSequentialFloatOpcode();
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedDecimalLiteral();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSequentialIntegerDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = peg$parseSequentialIntegerOpcode();
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedDecimalLiteral();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSequentialFloatOpcode() {
    var s0, s1;

    peg$silentFails++;
    if (input.substr(peg$currPos, 13) === peg$c422) {
      s0 = peg$c422;
      peg$currPos += 13;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c423); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 7) === peg$c424) {
        s0 = peg$c424;
        peg$currPos += 7;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c425); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 13) === peg$c426) {
          s0 = peg$c426;
          peg$currPos += 13;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c427); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 13) === peg$c428) {
            s0 = peg$c428;
            peg$currPos += 13;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c429); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 14) === peg$c430) {
              s0 = peg$c430;
              peg$currPos += 14;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c431); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 12) === peg$c432) {
                s0 = peg$c432;
                peg$currPos += 12;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c433); }
              }
              if (s0 === peg$FAILED) {
                if (input.substr(peg$currPos, 13) === peg$c434) {
                  s0 = peg$c434;
                  peg$currPos += 13;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) { peg$fail(peg$c435); }
                }
                if (s0 === peg$FAILED) {
                  if (input.substr(peg$currPos, 15) === peg$c436) {
                    s0 = peg$c436;
                    peg$currPos += 15;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) { peg$fail(peg$c437); }
                  }
                  if (s0 === peg$FAILED) {
                    if (input.substr(peg$currPos, 15) === peg$c438) {
                      s0 = peg$c438;
                      peg$currPos += 15;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) { peg$fail(peg$c439); }
                    }
                    if (s0 === peg$FAILED) {
                      if (input.substr(peg$currPos, 14) === peg$c440) {
                        s0 = peg$c440;
                        peg$currPos += 14;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) { peg$fail(peg$c441); }
                      }
                      if (s0 === peg$FAILED) {
                        if (input.substr(peg$currPos, 13) === peg$c442) {
                          s0 = peg$c442;
                          peg$currPos += 13;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) { peg$fail(peg$c443); }
                        }
                        if (s0 === peg$FAILED) {
                          if (input.substr(peg$currPos, 10) === peg$c444) {
                            s0 = peg$c444;
                            peg$currPos += 10;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) { peg$fail(peg$c445); }
                          }
                          if (s0 === peg$FAILED) {
                            if (input.substr(peg$currPos, 10) === peg$c446) {
                              s0 = peg$c446;
                              peg$currPos += 10;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) { peg$fail(peg$c447); }
                            }
                            if (s0 === peg$FAILED) {
                              if (input.substr(peg$currPos, 10) === peg$c448) {
                                s0 = peg$c448;
                                peg$currPos += 10;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) { peg$fail(peg$c449); }
                              }
                              if (s0 === peg$FAILED) {
                                if (input.substr(peg$currPos, 8) === peg$c450) {
                                  s0 = peg$c450;
                                  peg$currPos += 8;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) { peg$fail(peg$c451); }
                                }
                                if (s0 === peg$FAILED) {
                                  if (input.substr(peg$currPos, 8) === peg$c452) {
                                    s0 = peg$c452;
                                    peg$currPos += 8;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) { peg$fail(peg$c453); }
                                  }
                                  if (s0 === peg$FAILED) {
                                    if (input.substr(peg$currPos, 8) === peg$c454) {
                                      s0 = peg$c454;
                                      peg$currPos += 8;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) { peg$fail(peg$c455); }
                                    }
                                    if (s0 === peg$FAILED) {
                                      if (input.substr(peg$currPos, 10) === peg$c456) {
                                        s0 = peg$c456;
                                        peg$currPos += 10;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) { peg$fail(peg$c457); }
                                      }
                                      if (s0 === peg$FAILED) {
                                        if (input.substr(peg$currPos, 10) === peg$c458) {
                                          s0 = peg$c458;
                                          peg$currPos += 10;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) { peg$fail(peg$c459); }
                                        }
                                        if (s0 === peg$FAILED) {
                                          if (input.substr(peg$currPos, 10) === peg$c460) {
                                            s0 = peg$c460;
                                            peg$currPos += 10;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) { peg$fail(peg$c461); }
                                          }
                                          if (s0 === peg$FAILED) {
                                            if (input.substr(peg$currPos, 13) === peg$c462) {
                                              s0 = peg$c462;
                                              peg$currPos += 13;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) { peg$fail(peg$c463); }
                                            }
                                            if (s0 === peg$FAILED) {
                                              if (input.substr(peg$currPos, 13) === peg$c462) {
                                                s0 = peg$c462;
                                                peg$currPos += 13;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) { peg$fail(peg$c463); }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c421); }
    }

    return s0;
  }

  function peg$parseSequentialIntegerOpcode() {
    var s0;

    if (input.substr(peg$currPos, 14) === peg$c464) {
      s0 = peg$c464;
      peg$currPos += 14;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c465); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 9) === peg$c466) {
        s0 = peg$c466;
        peg$currPos += 9;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c467); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 9) === peg$c468) {
          s0 = peg$c468;
          peg$currPos += 9;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c469); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 10) === peg$c470) {
            s0 = peg$c470;
            peg$currPos += 10;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c471); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 10) === peg$c472) {
              s0 = peg$c472;
              peg$currPos += 10;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c473); }
            }
            if (s0 === peg$FAILED) {
              s0 = peg$parseAriaCustomSequentialIntegerOpcode();
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseDelayCcDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    if (input.substr(peg$currPos, 8) === peg$c474) {
      s2 = peg$c474;
      peg$currPos += 8;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c475); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedDecimalLiteral();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseOffsetCcDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    if (input.substr(peg$currPos, 9) === peg$c476) {
      s2 = peg$c476;
      peg$currPos += 9;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c477); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedIntegerAsNumber();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsePitchLfoDepthCcDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    if (input.substr(peg$currPos, 16) === peg$c478) {
      s2 = peg$c478;
      peg$currPos += 16;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c479); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedIntegerAsNumber();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parsePitchLfoFreqCcDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    if (input.substr(peg$currPos, 15) === peg$c480) {
      s2 = peg$c480;
      peg$currPos += 15;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c481); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedDecimalLiteral();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseCutoffCcDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$currPos;
    if (input.substr(peg$currPos, 9) === peg$c482) {
      s2 = peg$c482;
      peg$currPos += 9;
    } else {
      s2 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c483); }
    }
    if (s2 !== peg$FAILED) {
      s3 = peg$parseSignedIntegerAsNumber();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s1;
        s2 = peg$c420(s2, s3);
        s1 = s2;
      } else {
        peg$currPos = s1;
        s1 = peg$FAILED;
      }
    } else {
      peg$currPos = s1;
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedIntegerAsNumber();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c64(s1, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLoopModeDirective() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 9) === peg$c484) {
      s1 = peg$c484;
      peg$currPos += 9;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c485); }
    }
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 61) {
        s2 = peg$c62;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c63); }
      }
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c486) {
          s3 = peg$c486;
          peg$currPos += 7;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c487); }
        }
        if (s3 === peg$FAILED) {
          if (input.substr(peg$currPos, 8) === peg$c488) {
            s3 = peg$c488;
            peg$currPos += 8;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c489); }
          }
          if (s3 === peg$FAILED) {
            if (input.substr(peg$currPos, 15) === peg$c490) {
              s3 = peg$c490;
              peg$currPos += 15;
            } else {
              s3 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c491); }
            }
            if (s3 === peg$FAILED) {
              if (input.substr(peg$currPos, 12) === peg$c492) {
                s3 = peg$c492;
                peg$currPos += 12;
              } else {
                s3 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c493); }
              }
            }
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c494(s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseMidiNoteValue() {
    var s0;

    s0 = peg$parseSignedIntegerAsNumber();
    if (s0 === peg$FAILED) {
      s0 = peg$parseMidiNoteName();
    }

    return s0;
  }

  function peg$parseDecimalDigits() {
    var s0, s1;

    s0 = [];
    s1 = peg$parseDecimalDigit();
    if (s1 !== peg$FAILED) {
      while (s1 !== peg$FAILED) {
        s0.push(s1);
        s1 = peg$parseDecimalDigit();
      }
    } else {
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseDecimalDigit() {
    var s0;

    if (peg$c495.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c496); }
    }

    return s0;
  }

  function peg$parseNonZeroDigit() {
    var s0;

    if (peg$c497.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c498); }
    }

    return s0;
  }

  function peg$parseExponentPart() {
    var s0, s1, s2;

    s0 = peg$currPos;
    s1 = peg$parseExponentIndicator();
    if (s1 !== peg$FAILED) {
      s2 = peg$parseSignedInteger();
      if (s2 !== peg$FAILED) {
        s1 = [s1, s2];
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseExponentIndicator() {
    var s0;

    if (peg$c499.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c500); }
    }

    return s0;
  }

  function peg$parseSignedInteger() {
    var s0, s1, s2;

    s0 = peg$currPos;
    if (peg$c501.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c502); }
    }
    if (s1 === peg$FAILED) {
      s1 = null;
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        s1 = [s1, s2];
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSignedIntegerAsNumber() {
    var s0, s1, s2;

    s0 = peg$currPos;
    if (peg$c501.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c502); }
    }
    if (s1 === peg$FAILED) {
      s1 = null;
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c503(s1, s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseDecimalLiteral() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    s1 = peg$currPos;
    s2 = peg$currPos;
    s3 = peg$parseDecimalIntegerLiteral();
    if (s3 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 46) {
        s4 = peg$c504;
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c505); }
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parseDecimalDigits();
        if (s5 === peg$FAILED) {
          s5 = null;
        }
        if (s5 !== peg$FAILED) {
          s6 = peg$parseExponentPart();
          if (s6 === peg$FAILED) {
            s6 = null;
          }
          if (s6 !== peg$FAILED) {
            s3 = [s3, s4, s5, s6];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
    } else {
      peg$currPos = s2;
      s2 = peg$FAILED;
    }
    if (s2 !== peg$FAILED) {
      s1 = input.substring(s1, peg$currPos);
    } else {
      s1 = s2;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c506(s1);
    }
    s0 = s1;
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      if (input.charCodeAt(peg$currPos) === 46) {
        s3 = peg$c504;
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c505); }
      }
      if (s3 !== peg$FAILED) {
        s4 = peg$parseDecimalDigits();
        if (s4 !== peg$FAILED) {
          s5 = peg$parseExponentPart();
          if (s5 === peg$FAILED) {
            s5 = null;
          }
          if (s5 !== peg$FAILED) {
            s3 = [s3, s4, s5];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c507(s1);
      }
      s0 = s1;
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$currPos;
        s2 = peg$currPos;
        s3 = peg$parseDecimalIntegerLiteral();
        if (s3 !== peg$FAILED) {
          s4 = peg$parseExponentPart();
          if (s4 === peg$FAILED) {
            s4 = null;
          }
          if (s4 !== peg$FAILED) {
            s3 = [s3, s4];
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
        if (s2 !== peg$FAILED) {
          s1 = input.substring(s1, peg$currPos);
        } else {
          s1 = s2;
        }
        if (s1 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c507(s1);
        }
        s0 = s1;
      }
    }

    return s0;
  }

  function peg$parseDecimalIntegerLiteral() {
    var s0, s1, s2;

    if (input.charCodeAt(peg$currPos) === 48) {
      s0 = peg$c508;
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c509); }
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parseNonZeroDigit();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseDecimalDigits();
        if (s2 === peg$FAILED) {
          s2 = null;
        }
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    }

    return s0;
  }

  function peg$parseSignedDecimalLiteral() {
    var s0, s1, s2;

    s0 = peg$currPos;
    if (peg$c501.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c502); }
    }
    if (s1 === peg$FAILED) {
      s1 = null;
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalLiteral();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c510(s1, s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseMidiNoteName() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parseMidiPitch();
    if (s1 !== peg$FAILED) {
      s2 = peg$parseMidiAccidental();
      if (s2 !== peg$FAILED) {
        s3 = peg$parseSignedIntegerAsNumber();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s1 = peg$c511(s1, s2, s3);
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseMidiPitch() {
    var s0, s1;

    s0 = peg$currPos;
    if (peg$c512.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c513); }
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c514(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parseMidiAccidental() {
    var s0, s1;

    s0 = peg$currPos;
    if (peg$c515.test(input.charAt(peg$currPos))) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c516); }
    }
    if (s1 === peg$FAILED) {
      s1 = null;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c517(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parseFilepath() {
    var s0, s1, s2;

    s0 = peg$currPos;
    s1 = peg$parseFilename();
    if (s1 !== peg$FAILED) {
      s2 = peg$parseFileExtension();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c518(s1, s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFilename() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$currPos;
    s3 = peg$currPos;
    peg$silentFails++;
    s4 = peg$parseFileExtension();
    peg$silentFails--;
    if (s4 === peg$FAILED) {
      s3 = void 0;
    } else {
      peg$currPos = s3;
      s3 = peg$FAILED;
    }
    if (s3 !== peg$FAILED) {
      s4 = peg$parseSourceCharacter();
      if (s4 !== peg$FAILED) {
        peg$savedPos = s2;
        s3 = peg$c519(s4);
        s2 = s3;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
    } else {
      peg$currPos = s2;
      s2 = peg$FAILED;
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$currPos;
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parseFileExtension();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSourceCharacter();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s2;
            s3 = peg$c519(s4);
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c520(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parsePath() {
    var s0;

    if (input.substr(peg$currPos, 3) === peg$c521) {
      s0 = peg$c521;
      peg$currPos += 3;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c522); }
    }

    return s0;
  }

  function peg$parseFileExtension() {
    var s0;

    if (input.substr(peg$currPos, 4) === peg$c523) {
      s0 = peg$c523;
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c524); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 4) === peg$c525) {
        s0 = peg$c525;
        peg$currPos += 4;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c526); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 4) === peg$c527) {
          s0 = peg$c527;
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c528); }
        }
      }
    }

    return s0;
  }

  function peg$parseWhiteSpace() {
    var s0, s1;

    peg$silentFails++;
    if (peg$c530.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c531); }
    }
    if (s0 === peg$FAILED) {
      s0 = peg$parseZs();
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c529); }
    }

    return s0;
  }

  function peg$parseLineTerminator() {
    var s0;

    if (peg$c532.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c533); }
    }

    return s0;
  }

  function peg$parseLineTerminatorSequence() {
    var s0, s1;

    peg$silentFails++;
    if (input.charCodeAt(peg$currPos) === 10) {
      s0 = peg$c535;
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c536); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 2) === peg$c537) {
        s0 = peg$c537;
        peg$currPos += 2;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c538); }
      }
      if (s0 === peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 13) {
          s0 = peg$c539;
          peg$currPos++;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c540); }
        }
        if (s0 === peg$FAILED) {
          if (input.charCodeAt(peg$currPos) === 8232) {
            s0 = peg$c541;
            peg$currPos++;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c542); }
          }
          if (s0 === peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 8233) {
              s0 = peg$c543;
              peg$currPos++;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c544); }
            }
          }
        }
      }
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c534); }
    }

    return s0;
  }

  function peg$parseComment() {
    var s0, s1;

    peg$silentFails++;
    s0 = peg$parseMultiLineComment();
    if (s0 === peg$FAILED) {
      s0 = peg$parseSingleLineComment();
    }
    peg$silentFails--;
    if (s0 === peg$FAILED) {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c545); }
    }

    return s0;
  }

  function peg$parseMultiLineComment() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c546) {
      s1 = peg$c546;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c547); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$currPos;
      s4 = peg$currPos;
      peg$silentFails++;
      if (input.substr(peg$currPos, 2) === peg$c548) {
        s5 = peg$c548;
        peg$currPos += 2;
      } else {
        s5 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c549); }
      }
      peg$silentFails--;
      if (s5 === peg$FAILED) {
        s4 = void 0;
      } else {
        peg$currPos = s4;
        s4 = peg$FAILED;
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parseSourceCharacter();
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        if (input.substr(peg$currPos, 2) === peg$c548) {
          s5 = peg$c548;
          peg$currPos += 2;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c549); }
        }
        peg$silentFails--;
        if (s5 === peg$FAILED) {
          s4 = void 0;
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parseSourceCharacter();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 2) === peg$c548) {
          s3 = peg$c548;
          peg$currPos += 2;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c549); }
        }
        if (s3 !== peg$FAILED) {
          s1 = [s1, s2, s3];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseMultiLineCommentNoLineTerminator() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c546) {
      s1 = peg$c546;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c547); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$currPos;
      s4 = peg$currPos;
      peg$silentFails++;
      if (input.substr(peg$currPos, 2) === peg$c548) {
        s5 = peg$c548;
        peg$currPos += 2;
      } else {
        s5 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c549); }
      }
      if (s5 === peg$FAILED) {
        s5 = peg$parseLineTerminator();
      }
      peg$silentFails--;
      if (s5 === peg$FAILED) {
        s4 = void 0;
      } else {
        peg$currPos = s4;
        s4 = peg$FAILED;
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parseSourceCharacter();
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        if (input.substr(peg$currPos, 2) === peg$c548) {
          s5 = peg$c548;
          peg$currPos += 2;
        } else {
          s5 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c549); }
        }
        if (s5 === peg$FAILED) {
          s5 = peg$parseLineTerminator();
        }
        peg$silentFails--;
        if (s5 === peg$FAILED) {
          s4 = void 0;
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parseSourceCharacter();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 2) === peg$c548) {
          s3 = peg$c548;
          peg$currPos += 2;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c549); }
        }
        if (s3 !== peg$FAILED) {
          s1 = [s1, s2, s3];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseSingleLineComment() {
    var s0, s1, s2, s3, s4, s5;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c550) {
      s1 = peg$c550;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c551); }
    }
    if (s1 !== peg$FAILED) {
      s2 = [];
      s3 = peg$currPos;
      s4 = peg$currPos;
      peg$silentFails++;
      s5 = peg$parseLineTerminator();
      peg$silentFails--;
      if (s5 === peg$FAILED) {
        s4 = void 0;
      } else {
        peg$currPos = s4;
        s4 = peg$FAILED;
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$parseSourceCharacter();
        if (s5 !== peg$FAILED) {
          s4 = [s4, s5];
          s3 = s4;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      } else {
        peg$currPos = s3;
        s3 = peg$FAILED;
      }
      while (s3 !== peg$FAILED) {
        s2.push(s3);
        s3 = peg$currPos;
        s4 = peg$currPos;
        peg$silentFails++;
        s5 = peg$parseLineTerminator();
        peg$silentFails--;
        if (s5 === peg$FAILED) {
          s4 = void 0;
        } else {
          peg$currPos = s4;
          s4 = peg$FAILED;
        }
        if (s4 !== peg$FAILED) {
          s5 = peg$parseSourceCharacter();
          if (s5 !== peg$FAILED) {
            s4 = [s4, s5];
            s3 = s4;
          } else {
            peg$currPos = s3;
            s3 = peg$FAILED;
          }
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
      }
      if (s2 !== peg$FAILED) {
        s1 = [s1, s2];
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseZs() {
    var s0;

    if (peg$c552.test(input.charAt(peg$currPos))) {
      s0 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c553); }
    }

    return s0;
  }

  function peg$parseEOS() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parse__();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 59) {
        s2 = peg$c554;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c555); }
      }
      if (s2 !== peg$FAILED) {
        s1 = [s1, s2];
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseLineTerminatorSequence();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parse_();
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          peg$silentFails++;
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c556;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c557); }
          }
          peg$silentFails--;
          if (s3 !== peg$FAILED) {
            peg$currPos = s2;
            s2 = void 0;
          } else {
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parse__();
          if (s1 !== peg$FAILED) {
            s2 = peg$parseEOF();
            if (s2 !== peg$FAILED) {
              s1 = [s1, s2];
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }
    }

    return s0;
  }

  function peg$parseEOSNoLineTerminator() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parse_();
    if (s1 !== peg$FAILED) {
      if (input.charCodeAt(peg$currPos) === 59) {
        s2 = peg$c554;
        peg$currPos++;
      } else {
        s2 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c555); }
      }
      if (s2 !== peg$FAILED) {
        s1 = [s1, s2];
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parse_();
      if (s1 !== peg$FAILED) {
        s2 = peg$parseLineTerminatorSequence();
        if (s2 !== peg$FAILED) {
          s1 = [s1, s2];
          s0 = s1;
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
      if (s0 === peg$FAILED) {
        s0 = peg$currPos;
        s1 = peg$parse_();
        if (s1 !== peg$FAILED) {
          s2 = peg$currPos;
          peg$silentFails++;
          if (input.charCodeAt(peg$currPos) === 125) {
            s3 = peg$c556;
            peg$currPos++;
          } else {
            s3 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c557); }
          }
          peg$silentFails--;
          if (s3 !== peg$FAILED) {
            peg$currPos = s2;
            s2 = void 0;
          } else {
            s2 = peg$FAILED;
          }
          if (s2 !== peg$FAILED) {
            s1 = [s1, s2];
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
        if (s0 === peg$FAILED) {
          s0 = peg$currPos;
          s1 = peg$parse_();
          if (s1 !== peg$FAILED) {
            s2 = peg$parseEOF();
            if (s2 !== peg$FAILED) {
              s1 = [s1, s2];
              s0 = s1;
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        }
      }
    }

    return s0;
  }

  function peg$parseEOF() {
    var s0, s1;

    s0 = peg$currPos;
    peg$silentFails++;
    if (input.length > peg$currPos) {
      s1 = input.charAt(peg$currPos);
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c3); }
    }
    peg$silentFails--;
    if (s1 === peg$FAILED) {
      s0 = void 0;
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parse_() {
    var s0, s1;

    s0 = [];
    s1 = peg$parseWhiteSpace();
    if (s1 === peg$FAILED) {
      s1 = peg$parseMultiLineCommentNoLineTerminator();
      if (s1 === peg$FAILED) {
        s1 = peg$parseSingleLineComment();
      }
    }
    while (s1 !== peg$FAILED) {
      s0.push(s1);
      s1 = peg$parseWhiteSpace();
      if (s1 === peg$FAILED) {
        s1 = peg$parseMultiLineCommentNoLineTerminator();
        if (s1 === peg$FAILED) {
          s1 = peg$parseSingleLineComment();
        }
      }
    }

    return s0;
  }

  function peg$parse__() {
    var s0, s1;

    s0 = [];
    s1 = peg$parseWhiteSpace();
    if (s1 === peg$FAILED) {
      s1 = peg$parseLineTerminatorSequence();
      if (s1 === peg$FAILED) {
        s1 = peg$parseComment();
      }
    }
    while (s1 !== peg$FAILED) {
      s0.push(s1);
      s1 = peg$parseWhiteSpace();
      if (s1 === peg$FAILED) {
        s1 = peg$parseLineTerminatorSequence();
        if (s1 === peg$FAILED) {
          s1 = peg$parseComment();
        }
      }
    }

    return s0;
  }

  function peg$parseAriaCustomHeader() {
    var s0;

    if (input.substr(peg$currPos, 9) === peg$c558) {
      s0 = peg$c558;
      peg$currPos += 9;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c559); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 7) === peg$c13) {
        s0 = peg$c13;
        peg$currPos += 7;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c14); }
      }
    }

    return s0;
  }

  function peg$parseAriaCustomIntegerOpcode() {
    var s0;

    if (input.substr(peg$currPos, 14) === peg$c560) {
      s0 = peg$c560;
      peg$currPos += 14;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c561); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 13) === peg$c562) {
        s0 = peg$c562;
        peg$currPos += 13;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c563); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 10) === peg$c564) {
          s0 = peg$c564;
          peg$currPos += 10;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c565); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 11) === peg$c566) {
            s0 = peg$c566;
            peg$currPos += 11;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c567); }
          }
          if (s0 === peg$FAILED) {
            if (input.substr(peg$currPos, 10) === peg$c568) {
              s0 = peg$c568;
              peg$currPos += 10;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c569); }
            }
            if (s0 === peg$FAILED) {
              if (input.substr(peg$currPos, 19) === peg$c570) {
                s0 = peg$c570;
                peg$currPos += 19;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) { peg$fail(peg$c571); }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseAriaCustomFloatOpcode() {
    var s0;

    if (input.substr(peg$currPos, 10) === peg$c564) {
      s0 = peg$c564;
      peg$currPos += 10;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c565); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 13) === peg$c562) {
        s0 = peg$c562;
        peg$currPos += 13;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c563); }
      }
    }

    return s0;
  }

  function peg$parseAriaCustomSequentialIntegerOpcode() {
    var s0;

    if (input.substr(peg$currPos, 6) === peg$c572) {
      s0 = peg$c572;
      peg$currPos += 6;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c573); }
    }
    if (s0 === peg$FAILED) {
      if (input.substr(peg$currPos, 16) === peg$c574) {
        s0 = peg$c574;
        peg$currPos += 16;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) { peg$fail(peg$c575); }
      }
      if (s0 === peg$FAILED) {
        if (input.substr(peg$currPos, 14) === peg$c576) {
          s0 = peg$c576;
          peg$currPos += 14;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c577); }
        }
        if (s0 === peg$FAILED) {
          if (input.substr(peg$currPos, 17) === peg$c578) {
            s0 = peg$c578;
            peg$currPos += 17;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) { peg$fail(peg$c579); }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseAriaCustomTextOpcode() {
    var s0, s1, s2;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 13) === peg$c580) {
      s1 = peg$c580;
      peg$currPos += 13;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c581); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseLabel();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c582(s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseAriaDefaultPathOpcode() {
    var s0, s1, s2;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 13) === peg$c583) {
      s1 = peg$c583;
      peg$currPos += 13;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c584); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parsePath();
      if (s2 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$c585(s2);
        s0 = s1;
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLabel() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    s1 = [];
    s2 = peg$currPos;
    s3 = peg$currPos;
    peg$silentFails++;
    s4 = peg$parseLineTerminatorSequence();
    peg$silentFails--;
    if (s4 === peg$FAILED) {
      s3 = void 0;
    } else {
      peg$currPos = s3;
      s3 = peg$FAILED;
    }
    if (s3 !== peg$FAILED) {
      s4 = peg$parseSourceCharacter();
      if (s4 !== peg$FAILED) {
        peg$savedPos = s2;
        s3 = peg$c519(s4);
        s2 = s3;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
    } else {
      peg$currPos = s2;
      s2 = peg$FAILED;
    }
    if (s2 !== peg$FAILED) {
      while (s2 !== peg$FAILED) {
        s1.push(s2);
        s2 = peg$currPos;
        s3 = peg$currPos;
        peg$silentFails++;
        s4 = peg$parseLineTerminatorSequence();
        peg$silentFails--;
        if (s4 === peg$FAILED) {
          s3 = void 0;
        } else {
          peg$currPos = s3;
          s3 = peg$FAILED;
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSourceCharacter();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s2;
            s3 = peg$c519(s4);
            s2 = s3;
          } else {
            peg$currPos = s2;
            s2 = peg$FAILED;
          }
        } else {
          peg$currPos = s2;
          s2 = peg$FAILED;
        }
      }
    } else {
      s1 = peg$FAILED;
    }
    if (s1 !== peg$FAILED) {
      peg$savedPos = s0;
      s1 = peg$c520(s1);
    }
    s0 = s1;

    return s0;
  }

  function peg$parseAriaCurveOpcode() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 118) {
      s1 = peg$c586;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c587); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 61) {
          s3 = peg$c62;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c63); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c588(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFlexEgOpcode() {
    var s0;

    s0 = peg$parseFlexEgCutoff();
    if (s0 === peg$FAILED) {
      s0 = peg$parseFlexEgSustain();
      if (s0 === peg$FAILED) {
        s0 = peg$parseFlexEgPitch();
        if (s0 === peg$FAILED) {
          s0 = peg$parseFlexEgTime();
          if (s0 === peg$FAILED) {
            s0 = peg$parseFlexEgLevel();
            if (s0 === peg$FAILED) {
              s0 = peg$parseFlexEgShape();
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseFlexEgCutoff() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c589) {
      s1 = peg$c589;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c590); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 8) === peg$c591) {
          s3 = peg$c591;
          peg$currPos += 8;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c592); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c593(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFlexEgSustain() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c589) {
      s1 = peg$c589;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c590); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 9) === peg$c594) {
          s3 = peg$c594;
          peg$currPos += 9;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c595); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c593(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFlexEgPitch() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c589) {
      s1 = peg$c589;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c590); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c596) {
          s3 = peg$c596;
          peg$currPos += 7;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c597); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c593(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFlexEgTime() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c589) {
      s1 = peg$c589;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c590); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 5) === peg$c598) {
          s3 = peg$c598;
          peg$currPos += 5;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c599); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedIntegerAsNumber();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 61) {
              s5 = peg$c62;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c63); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parseSignedDecimalLiteral();
              if (s6 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c600(s2, s4, s6);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFlexEgLevel() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c589) {
      s1 = peg$c589;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c590); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c601) {
          s3 = peg$c601;
          peg$currPos += 6;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c602); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedIntegerAsNumber();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 61) {
              s5 = peg$c62;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c63); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parseSignedDecimalLiteral();
              if (s6 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c603(s2, s4, s6);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseFlexEgShape() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 2) === peg$c589) {
      s1 = peg$c589;
      peg$currPos += 2;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c590); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c604) {
          s3 = peg$c604;
          peg$currPos += 6;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c605); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedIntegerAsNumber();
          if (s4 !== peg$FAILED) {
            if (input.charCodeAt(peg$currPos) === 61) {
              s5 = peg$c62;
              peg$currPos++;
            } else {
              s5 = peg$FAILED;
              if (peg$silentFails === 0) { peg$fail(peg$c63); }
            }
            if (s5 !== peg$FAILED) {
              s6 = peg$parseSignedIntegerAsNumber();
              if (s6 !== peg$FAILED) {
                peg$savedPos = s0;
                s1 = peg$c606(s2, s4, s6);
                s0 = s1;
              } else {
                peg$currPos = s0;
                s0 = peg$FAILED;
              }
            } else {
              peg$currPos = s0;
              s0 = peg$FAILED;
            }
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoOpcode() {
    var s0;

    s0 = peg$parseLfoWave();
    if (s0 === peg$FAILED) {
      s0 = peg$parseLfoFreq();
      if (s0 === peg$FAILED) {
        s0 = peg$parseLfoPitch();
        if (s0 === peg$FAILED) {
          s0 = peg$parseLfoDelay();
          if (s0 === peg$FAILED) {
            s0 = peg$parseLfoAmplitude();
            if (s0 === peg$FAILED) {
              s0 = peg$parseLfoCutoff();
              if (s0 === peg$FAILED) {
                s0 = peg$parseLfoPhase();
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseLfoWave() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c609) {
          s3 = peg$c609;
          peg$currPos += 6;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c610); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedIntegerAsNumber();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c611(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoFreq() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 6) === peg$c612) {
          s3 = peg$c612;
          peg$currPos += 6;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c613); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c614(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoPitch() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c596) {
          s3 = peg$c596;
          peg$currPos += 7;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c597); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedIntegerAsNumber();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c615(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoDelay() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c616) {
          s3 = peg$c616;
          peg$currPos += 7;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c617); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c618(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoAmplitude() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 11) === peg$c619) {
          s3 = peg$c619;
          peg$currPos += 11;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c620); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c621(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoCutoff() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 8) === peg$c591) {
          s3 = peg$c591;
          peg$currPos += 8;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c592); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c622(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseLfoPhase() {
    var s0, s1, s2, s3, s4;

    s0 = peg$currPos;
    if (input.substr(peg$currPos, 3) === peg$c607) {
      s1 = peg$c607;
      peg$currPos += 3;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) { peg$fail(peg$c608); }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$parseDecimalDigits();
      if (s2 !== peg$FAILED) {
        if (input.substr(peg$currPos, 7) === peg$c623) {
          s3 = peg$c623;
          peg$currPos += 7;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) { peg$fail(peg$c624); }
        }
        if (s3 !== peg$FAILED) {
          s4 = peg$parseSignedDecimalLiteral();
          if (s4 !== peg$FAILED) {
            peg$savedPos = s0;
            s1 = peg$c625(s2, s4);
            s0 = s1;
          } else {
            peg$currPos = s0;
            s0 = peg$FAILED;
          }
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  peg$result = peg$startRuleFunction();

  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result;
  } else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation());
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
}

module.exports = {
  SyntaxError: peg$SyntaxError,
  parse:       peg$parse
};
